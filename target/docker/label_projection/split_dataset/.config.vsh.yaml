functionality:
  name: "split_dataset"
  namespace: "label_projection"
  version: "main_build"
  authors: []
  inputs: []
  outputs: []
  arguments:
  - type: "file"
    name: "--input"
    alternatives: []
    description: "A normalised data with a PCA embedding and HVG selection"
    info:
      label: "Dataset+PCA+HVG"
      slots:
        layers:
        - type: "integer"
          name: "counts"
          description: "Raw counts"
          required: true
        - type: "double"
          name: "normalized"
          description: "Normalised expression values"
        obs:
        - type: "string"
          name: "celltype"
          description: "Cell type information"
          required: false
        - type: "string"
          name: "batch"
          description: "Batch information"
          required: false
        - type: "string"
          name: "tissue"
          description: "Tissue information"
          required: false
        - type: "double"
          name: "size_factors"
          description: "The size factors created by the normalisation method, if any."
          required: false
        var:
        - type: "boolean"
          name: "hvg"
          description: "Whether or not the feature is considered to be a 'highly variable\
            \ gene'"
          required: true
        - type: "integer"
          name: "hvg_score"
          description: "A ranking of the features by hvg."
          required: true
        obsm:
        - type: "double"
          name: "X_pca"
          description: "The resulting PCA embedding."
          required: true
        varm:
        - type: "double"
          name: "pca_loadings"
          description: "The PCA loadings matrix."
          required: true
        uns:
        - type: "string"
          name: "dataset_id"
          description: "A unique identifier for the dataset"
          required: true
        - type: "string"
          name: "normalization_id"
          description: "Which normalization was used"
          required: true
        - type: "double"
          name: "pca_variance"
          description: "The PCA variance objects."
          required: true
    example:
    - "dataset.h5ad"
    default: []
    must_exist: true
    create_parent: true
    required: false
    direction: "input"
    multiple: false
    multiple_sep: ":"
    dest: "par"
  - type: "file"
    name: "--output_train"
    alternatives: []
    description: "The training data"
    info:
      short_description: "Training data"
      slots:
        layers:
        - type: "integer"
          name: "counts"
          description: "Raw counts"
        - type: "double"
          name: "normalized"
          description: "Normalized counts"
        obs:
        - type: "string"
          name: "label"
          description: "Ground truth cell type labels"
        - type: "string"
          name: "batch"
          description: "Batch information"
        var:
        - type: "boolean"
          name: "hvg"
          description: "Whether or not the feature is considered to be a 'highly variable\
            \ gene'"
          required: true
        - type: "integer"
          name: "hvg_score"
          description: "A ranking of the features by hvg."
          required: true
        obsm:
        - type: "double"
          name: "X_pca"
          description: "The resulting PCA embedding."
          required: true
        uns:
        - type: "string"
          name: "dataset_id"
          description: "A unique identifier for the dataset"
          required: true
        - type: "string"
          name: "normalization_id"
          description: "Which normalization was used"
          required: true
    example:
    - "training.h5ad"
    default: []
    must_exist: true
    create_parent: true
    required: false
    direction: "output"
    multiple: false
    multiple_sep: ":"
    dest: "par"
  - type: "file"
    name: "--output_test"
    alternatives: []
    description: "The test data (without labels)"
    info:
      short_description: "Test data"
      slots:
        layers:
        - type: "integer"
          name: "counts"
          description: "Raw counts"
        - type: "double"
          name: "normalized"
          description: "Normalized counts"
        obs:
        - type: "string"
          name: "batch"
          description: "Batch information"
        var:
        - type: "boolean"
          name: "hvg"
          description: "Whether or not the feature is considered to be a 'highly variable\
            \ gene'"
          required: true
        - type: "integer"
          name: "hvg_score"
          description: "A ranking of the features by hvg."
          required: true
        obsm:
        - type: "double"
          name: "X_pca"
          description: "The resulting PCA embedding."
          required: true
        uns:
        - type: "string"
          name: "dataset_id"
          description: "A unique identifier for the dataset"
          required: true
        - type: "string"
          name: "normalization_id"
          description: "Which normalization was used"
          required: true
    example:
    - "test.h5ad"
    default: []
    must_exist: true
    create_parent: true
    required: false
    direction: "output"
    multiple: false
    multiple_sep: ":"
    dest: "par"
  - type: "file"
    name: "--output_solution"
    alternatives: []
    description: "The solution for the test data"
    info:
      short_description: "Solution"
      slots:
        layers:
        - type: "integer"
          name: "counts"
          description: "Raw counts"
        - type: "double"
          name: "normalized"
          description: "Normalized counts"
        obs:
        - type: "string"
          name: "label"
          description: "Ground truth cell type labels"
        - type: "string"
          name: "batch"
          description: "Batch information"
        var:
        - type: "boolean"
          name: "hvg"
          description: "Whether or not the feature is considered to be a 'highly variable\
            \ gene'"
          required: true
        - type: "integer"
          name: "hvg_score"
          description: "A ranking of the features by hvg."
          required: true
        obsm:
        - type: "double"
          name: "X_pca"
          description: "The resulting PCA embedding."
          required: true
        uns:
        - type: "string"
          name: "dataset_id"
          description: "A unique identifier for the dataset"
          required: true
        - type: "string"
          name: "normalization_id"
          description: "Which normalization was used"
          required: true
    example:
    - "solution.h5ad"
    default: []
    must_exist: true
    create_parent: true
    required: false
    direction: "output"
    multiple: false
    multiple_sep: ":"
    dest: "par"
  - type: "string"
    name: "--method"
    alternatives: []
    description: "The process method to assign train/test."
    example: []
    default:
    - "batch"
    required: false
    choices:
    - "batch"
    - "random"
    direction: "input"
    multiple: false
    multiple_sep: ":"
    dest: "par"
  - type: "string"
    name: "--obs_label"
    alternatives: []
    description: "Which .obs slot to use as label."
    example: []
    default:
    - "celltype"
    required: false
    choices: []
    direction: "input"
    multiple: false
    multiple_sep: ":"
    dest: "par"
  - type: "string"
    name: "--obs_batch"
    alternatives: []
    description: "Which .obs slot to use as batch covariate."
    example: []
    default:
    - "batch"
    required: false
    choices: []
    direction: "input"
    multiple: false
    multiple_sep: ":"
    dest: "par"
  - type: "integer"
    name: "--seed"
    alternatives: []
    description: "A seed for the subsampling."
    example:
    - 123
    default: []
    required: false
    choices: []
    direction: "input"
    multiple: false
    multiple_sep: ":"
    dest: "par"
  argument_groups: []
  resources:
  - type: "python_script"
    path: "script.py"
    is_executable: true
  test_resources:
  - type: "python_script"
    text: "import anndata as ad\nimport subprocess\nfrom os import path\n\ninput_path\
      \ = meta[\"resources_dir\"] + \"/pancreas/dataset.h5ad\"\noutput_train_path\
      \ = \"output_train.h5ad\"\noutput_test_path = \"output_test.h5ad\"\noutput_solution_path\
      \ = \"output_solution.h5ad\"\n\ncmd = [\n  meta['executable'],\n  \"--input\"\
      , input_path,\n  \"--output_train\", output_train_path,\n  \"--output_test\"\
      , output_test_path,\n  \"--output_solution\", output_solution_path\n]\n\nprint(\"\
      >> Running script as test\")\nout = subprocess.check_output(cmd).decode(\"utf-8\"\
      )\n\nprint(\">> Checking whether output file exists\")\nassert path.exists(output_train_path)\n\
      assert path.exists(output_test_path)\nassert path.exists(output_solution_path)\n\
      \nprint(\">> Reading h5ad files\")\ninput = ad.read_h5ad(input_path)\noutput_train\
      \ = ad.read_h5ad(output_train_path)\noutput_test = ad.read_h5ad(output_test_path)\n\
      output_solution = ad.read_h5ad(output_solution_path)\n\nprint(\"input:\", input)\n\
      print(\"output_train:\", output_train)\nprint(\"output_test:\", output_test)\n\
      print(\"output_solution:\", output_solution)\n\nprint(\">> Checking dimensions,\
      \ make sure no cells were dropped\")\nassert input.n_obs == output_train.n_obs\
      \ + output_test.n_obs\nassert output_test.n_obs == output_solution.n_obs\nassert\
      \ input.n_vars == output_train.n_vars\nassert input.n_vars == output_test.n_vars\n\
      \nprint(\">> Checking whether data from input was copied properly to output\"\
      )\nassert output_train.uns[\"dataset_id\"] == input.uns[\"dataset_id\"]\nassert\
      \ output_test.uns[\"dataset_id\"] == input.uns[\"dataset_id\"]\nassert output_solution.uns[\"\
      dataset_id\"] == input.uns[\"dataset_id\"]\n\nprint(\">> Check whether certain\
      \ slots exist\")\nassert \"counts\" in output_train.layers\nassert \"normalized\"\
      \ in output_train.layers\nassert \"label\" in output_train.obs\nassert \"batch\"\
      \ in output_train.obs\nassert \"counts\" in output_test.layers\nassert \"normalized\"\
      \ in output_test.layers\nassert \"label\" not in output_test.obs # make sure\
      \ label is /not/ here\nassert \"batch\" in output_test.obs\nassert \"counts\"\
      \ in output_solution.layers\nassert \"normalized\" in output_solution.layers\n\
      assert \"label\" in output_solution.obs\nassert \"batch\" in output_solution.obs\n\
      \nprint(\">> All checks succeeded!\")\n"
    dest: "generic_test.py"
    is_executable: true
  - type: "file"
    path: "../../../resources_test/common/pancreas"
  status: "enabled"
  requirements:
    commands: []
  set_wd_to_resources_dir: false
platforms:
- type: "docker"
  id: "docker"
  image: "python:3.10"
  target_organization: "openproblems-bio"
  target_registry: "ghcr.io"
  namespace_separator: "_"
  resolve_volume: "Automatic"
  chown: true
  port: []
  setup_strategy: "ifneedbepullelsecachedbuild"
  run_args: []
  target_image_source: "https://github.com/openproblems-bio/openproblems-v2"
  setup:
  - type: "python"
    user: false
    packages:
    - "pyyaml"
    - "anndata>=0.8"
    pip: []
    pypi: []
    git: []
    github: []
    gitlab: []
    mercurial: []
    svn: []
    bazaar: []
    url: []
    script: []
    upgrade: true
  test_setup: []
- type: "nextflow"
  id: "nextflow"
  variant: "vdsl3"
  directives:
    accelerator: {}
    conda: []
    containerOptions: []
    label: []
    module: []
    pod: []
    publishDir: []
    queue: []
    tag: "$id"
  auto:
    simplifyInput: true
    simplifyOutput: true
    transcript: false
    publish: false
  debug: false
  container: "docker"
info:
  config: "/home/runner/work/openproblems-v2/openproblems-v2/src/label_projection/split_dataset/config.vsh.yaml"
  platform: "docker"
  output: "/home/runner/work/openproblems-v2/openproblems-v2/target/docker/label_projection/split_dataset"
  executable: "/home/runner/work/openproblems-v2/openproblems-v2/target/docker/label_projection/split_dataset/split_dataset"
  viash_version: "0.6.7"
  git_commit: "4e9de5233ccc676b32871a6641c640151d230549"
  git_remote: "https://github.com/openproblems-bio/openproblems-v2"
