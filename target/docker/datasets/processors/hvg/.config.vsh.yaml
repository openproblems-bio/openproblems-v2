functionality:
  name: "hvg"
  namespace: "datasets/processors"
  version: "main_build"
  authors: []
  arguments:
  - type: "file"
    name: "--input"
    alternatives: []
    description: "A normalised dataset with a PCA embedding"
    info:
      label: "Dataset+PCA"
      slots:
        obsm:
        - type: "double"
          name: "X_pca"
          description: "The resulting PCA embedding."
          required: true
        varm:
        - type: "double"
          name: "pca_loadings"
          description: "The PCA loadings matrix."
          required: true
        uns:
        - type: "string"
          name: "dataset_id"
          description: "A unique identifier for the dataset"
          required: true
        - name: "dataset_name"
          type: "string"
          description: "Nicely formatted name."
          required: true
        - type: "string"
          name: "data_url"
          description: "Link to the original source of the dataset."
          required: false
        - name: "data_reference"
          type: "string"
          description: "Bibtex reference of the paper in which the dataset was published."
          required: false
        - name: "dataset_summary"
          type: "string"
          description: "Short description of the dataset."
          required: true
        - name: "dataset_description"
          type: "string"
          description: "Long description of the dataset."
          required: true
        - name: "dataset_organism"
          type: "string"
          description: "The organism of the sample in the dataset."
          required: false
        - type: "double"
          name: "pca_variance"
          description: "The PCA variance objects."
          required: true
        layers:
        - type: "integer"
          name: "counts"
          description: "Raw counts"
          required: true
        - type: "double"
          name: "normalized"
          description: "Normalised expression values"
        obs:
        - type: "string"
          name: "celltype"
          description: "Cell type information"
          required: false
        - type: "string"
          name: "batch"
          description: "Batch information"
          required: false
        - type: "string"
          name: "tissue"
          description: "Tissue information"
          required: false
        - type: "double"
          name: "size_factors"
          description: "The size factors created by the normalisation method, if any."
          required: false
    example:
    - "dataset.h5ad"
    default: []
    must_exist: true
    create_parent: true
    required: false
    direction: "input"
    multiple: false
    multiple_sep: ":"
    dest: "par"
  - type: "string"
    name: "--layer_input"
    alternatives: []
    description: "Which layer to use as input."
    example: []
    default:
    - "normalized"
    required: false
    choices: []
    direction: "input"
    multiple: false
    multiple_sep: ":"
    dest: "par"
  - type: "file"
    name: "--output"
    alternatives: []
    description: "A normalised dataset with a PCA embedding and HVG selection"
    info:
      label: "Dataset+PCA+HVG"
      slots:
        var:
        - type: "boolean"
          name: "hvg"
          description: "Whether or not the feature is considered to be a 'highly variable\
            \ gene'"
          required: true
        - type: "integer"
          name: "hvg_score"
          description: "A ranking of the features by hvg."
          required: true
        obsm:
        - type: "double"
          name: "X_pca"
          description: "The resulting PCA embedding."
          required: true
        varm:
        - type: "double"
          name: "pca_loadings"
          description: "The PCA loadings matrix."
          required: true
        uns:
        - type: "string"
          name: "dataset_id"
          description: "A unique identifier for the dataset"
          required: true
        - name: "dataset_name"
          type: "string"
          description: "Nicely formatted name."
          required: true
        - type: "string"
          name: "data_url"
          description: "Link to the original source of the dataset."
          required: false
        - name: "data_reference"
          type: "string"
          description: "Bibtex reference of the paper in which the dataset was published."
          required: false
        - name: "dataset_summary"
          type: "string"
          description: "Short description of the dataset."
          required: true
        - name: "dataset_description"
          type: "string"
          description: "Long description of the dataset."
          required: true
        - name: "dataset_organism"
          type: "string"
          description: "The organism of the sample in the dataset."
          required: false
        - type: "double"
          name: "pca_variance"
          description: "The PCA variance objects."
          required: true
        layers:
        - type: "integer"
          name: "counts"
          description: "Raw counts"
          required: true
        - type: "double"
          name: "normalized"
          description: "Normalised expression values"
        obs:
        - type: "string"
          name: "celltype"
          description: "Cell type information"
          required: false
        - type: "string"
          name: "batch"
          description: "Batch information"
          required: false
        - type: "string"
          name: "tissue"
          description: "Tissue information"
          required: false
        - type: "double"
          name: "size_factors"
          description: "The size factors created by the normalisation method, if any."
          required: false
    example:
    - "dataset.h5ad"
    default: []
    must_exist: true
    create_parent: true
    required: false
    direction: "output"
    multiple: false
    multiple_sep: ":"
    dest: "par"
  - type: "string"
    name: "--var_hvg"
    alternatives: []
    description: "In which .var slot to store whether a feature is considered to be\
      \ hvg."
    example: []
    default:
    - "hvg"
    required: false
    choices: []
    direction: "input"
    multiple: false
    multiple_sep: ":"
    dest: "par"
  - type: "string"
    name: "--var_hvg_score"
    alternatives: []
    description: "In which .var slot to store the gene variance score (normalized\
      \ dispersion)."
    example: []
    default:
    - "hvg_score"
    required: false
    choices: []
    direction: "input"
    multiple: false
    multiple_sep: ":"
    dest: "par"
  - type: "integer"
    name: "--num_features"
    alternatives: []
    description: "The number of HVG to select"
    example: []
    default:
    - 1000
    required: false
    choices: []
    direction: "input"
    multiple: false
    multiple_sep: ":"
    dest: "par"
  argument_groups: []
  resources:
  - type: "python_script"
    path: "script.py"
    is_executable: true
  description: "Compute HVG"
  test_resources:
  - type: "file"
    path: "../../../../resources_test/common/pancreas"
  - type: "python_script"
    text: "import anndata as ad\nimport subprocess\nfrom os import path\nimport yaml\n\
      \ninput_path = meta[\"resources_dir\"] + \"/pancreas/dataset.h5ad\"\noutput_path\
      \ = \"output.h5ad\"\n\ncmd = [\n  meta['executable'],\n  \"--input\", input_path,\n\
      \  \"--output\", output_path,\n]\n\nwith open(meta[\"config\"], \"r\") as file:\n\
      \    config = yaml.safe_load(file)\n\nfor arg in config[\"functionality\"][\"\
      arguments\"]:\n  if arg['name'] == '--layer_input':\n    layer_input = arg['default'][0]\n\
      \    cmd += ['--layer_input', layer_input]\n  elif arg['name'] == '--var_hvg':\n\
      \    var_hvg = arg['default'][0]\n    cmd += ['--var_hvg', var_hvg]\n  elif\
      \ arg['name'] == '--var_hvg_score':\n    var_hvg_score = arg['default'][0]\n\
      \    cmd += ['--var_hvg_score', var_hvg_score]\n\nprint(\">> Running script\
      \ as test\")\nout = subprocess.check_output(cmd)\n\nprint(\">> Checking whether\
      \ output file exists\")\nassert path.exists(output_path)\n\nprint(\">> Reading\
      \ h5ad files\")\ninput = ad.read_h5ad(input_path)\noutput = ad.read_h5ad(output_path)\n\
      print(\"input:\", input)\nprint(\"output:\", output)\n\nprint(\">> Checking\
      \ whether output data structures were added\")\nassert layer_input in output.layers\n\
      assert var_hvg in output.var\nassert var_hvg_score in output.var\n\nprint(\"\
      Checking whether data from input was copied properly to output\")\nassert input.n_obs\
      \ == output.n_obs\nassert input.uns[\"dataset_id\"] == output.uns[\"dataset_id\"\
      ]\n\nprint(\"All checks succeeded!\")"
    dest: "generic_test.py"
    is_executable: true
  status: "enabled"
  requirements:
    commands: []
  set_wd_to_resources_dir: false
platforms:
- type: "docker"
  id: "docker"
  image: "python:3.8"
  target_organization: "openproblems-bio"
  target_registry: "ghcr.io"
  namespace_separator: "/"
  resolve_volume: "Automatic"
  chown: true
  port: []
  setup_strategy: "ifneedbepullelsecachedbuild"
  run_args: []
  target_image_source: "https://github.com/openproblems-bio/openproblems-v2"
  setup:
  - type: "python"
    user: false
    packages:
    - "scanpy"
    - "anndata>=0.8"
    - "pyyaml"
    pip: []
    pypi: []
    git: []
    github: []
    gitlab: []
    mercurial: []
    svn: []
    bazaar: []
    url: []
    script: []
    upgrade: true
  test_setup: []
- type: "nextflow"
  id: "nextflow"
  variant: "vdsl3"
  directives:
    accelerator: {}
    conda: []
    containerOptions: []
    label: []
    module: []
    pod: []
    publishDir: []
    queue: []
    tag: "$id"
  auto:
    simplifyInput: true
    simplifyOutput: true
    transcript: false
    publish: false
  debug: false
  container: "docker"
info:
  config: "/home/runner/work/openproblems-v2/openproblems-v2/src/datasets/processors/hvg/config.vsh.yaml"
  platform: "docker"
  output: "/home/runner/work/openproblems-v2/openproblems-v2/target/docker/datasets/processors/hvg"
  executable: "/home/runner/work/openproblems-v2/openproblems-v2/target/docker/datasets/processors/hvg/hvg"
  viash_version: "0.7.0"
  git_commit: "cdc530151bc232a986f9cf2389997b6b2d8c9318"
  git_remote: "https://github.com/openproblems-bio/openproblems-v2"
