functionality:
  name: "check_dataset_schema"
  namespace: "common"
  version: "main_build"
  authors: []
  arguments: []
  argument_groups:
  - name: "Inputs"
    arguments:
    - type: "file"
      name: "--input"
      alternatives: []
      description: "A h5ad file."
      example: []
      default: []
      must_exist: true
      create_parent: true
      required: true
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "file"
      name: "--schema"
      alternatives: []
      description: "A schema file for the h5ad object."
      example: []
      default: []
      must_exist: true
      create_parent: true
      required: true
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
  - name: "Arguments"
    arguments:
    - type: "boolean"
      name: "--stop_on_error"
      alternatives: []
      description: "Whether or not to stop with exit code 1 if the input file does\
        \ not adhere to the schema."
      example: []
      default:
      - false
      required: false
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
  - name: "Output"
    arguments:
    - type: "file"
      name: "--checks"
      alternatives: []
      description: "If specified, this file will contain a structured log of which\
        \ checks succeeded (or not)."
      example:
      - "checks.json"
      default: []
      must_exist: true
      create_parent: true
      required: false
      direction: "output"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "file"
      name: "--output"
      alternatives: []
      description: "If specified, the output file will be a copy of the input file."
      example:
      - "output.h5ad"
      default: []
      must_exist: true
      create_parent: true
      required: false
      direction: "output"
      multiple: false
      multiple_sep: ":"
      dest: "par"
  resources:
  - type: "python_script"
    path: "script.py"
    is_executable: true
  description: "Checks if the dataset has the necessary slots that are predefined\
    \ in a schema."
  test_resources:
  - type: "file"
    path: "../../../resources_test/common/pancreas"
  - type: "python_script"
    path: "test.py"
    is_executable: true
  status: "enabled"
  requirements:
    commands: []
  set_wd_to_resources_dir: false
platforms:
- type: "docker"
  id: "docker"
  image: "python:3.10"
  target_organization: "openproblems-bio"
  target_registry: "ghcr.io"
  namespace_separator: "/"
  resolve_volume: "Automatic"
  chown: true
  port: []
  setup_strategy: "ifneedbepullelsecachedbuild"
  run_args: []
  target_image_source: "https://github.com/openproblems-bio/openproblems-v2"
  setup:
  - type: "python"
    user: false
    packages: []
    pip:
    - "anndata>=0.8"
    - "pyyaml"
    pypi: []
    git: []
    github: []
    gitlab: []
    mercurial: []
    svn: []
    bazaar: []
    url: []
    script: []
    upgrade: true
  test_setup: []
- type: "nextflow"
  id: "nextflow"
  variant: "vdsl3"
  directives:
    accelerator: {}
    conda: []
    containerOptions: []
    label: []
    module: []
    pod: []
    publishDir: []
    queue: []
    tag: "$id"
  auto:
    simplifyInput: true
    simplifyOutput: true
    transcript: false
    publish: false
  debug: false
  container: "docker"
info:
  config: "/home/runner/work/openproblems-v2/openproblems-v2/src/common/check_dataset_schema/config.vsh.yaml"
  platform: "nextflow"
  output: "/home/runner/work/openproblems-v2/openproblems-v2/target/nextflow/common/check_dataset_schema"
  executable: "/home/runner/work/openproblems-v2/openproblems-v2/target/nextflow/common/check_dataset_schema/check_dataset_schema"
  viash_version: "0.7.0"
  git_commit: "2d752c88006ac363d00a8de3ad247748522706ac"
  git_remote: "https://github.com/openproblems-bio/openproblems-v2"
