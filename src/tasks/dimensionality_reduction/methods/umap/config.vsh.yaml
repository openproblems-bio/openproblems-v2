__merge__: ../../api/comp_method.yaml
functionality:
  name: "umap"
  info:
    pretty_name: UMAP
    summary: "A manifold learning algorithm that utilizes topological data analysis for dimension reduction."
    description: |
      "Uniform Manifold Approximation and Projection is an algorithm for
      dimension reduction based on manifold learning techniques and ideas from
      topological data analysis. We perform UMAP on the logCPM expression matrix
      before and after HVG selection and with and without PCA as a pre-processing
      step."
    reference : "mcinnes2018umap"
    repository_url: "https://github.com/lmcinnes/umap"
    documentation_url: "https://github.com/lmcinnes/umap#readme"
    v1_url: openproblems/tasks/dimensionality_reduction/methods/umap.py
    v1_commit: 14d70b330cae09527a6d4c4e552db240601e31cf
    preferred_normalization: log_cpm
    variants:
      umap_logCPM:
      umap_pca_logCPM:
        n_pca_dims: 50
      umap_logCPM_1kHVG:
        n_hvg: 1000
      umap_pca_logCPM_1kHVG:
        n_pca_dims: 50
        n_hvg: 1000
  arguments:
    - name: "--n_hvg"
      type: integer
      description: Number of highly variable genes to subset to. If not specified, the input matrix will not be subset.
      default: 1000
    - name: "--n_pca_dims"
      type: integer
      description: Number of PCA dimensions to use. If not specified, no PCA will be performed.
  resources:
    - type: python_script
      path: script.py
platforms:
  - type: docker
    image: ghcr.io/openproblems-bio/base-python:latest
    setup:
      - type: python
        packages:
          - scanpy
          - umap-learn
  - type: nextflow
    directives: 
      label: [ highmem, highcpu ]
