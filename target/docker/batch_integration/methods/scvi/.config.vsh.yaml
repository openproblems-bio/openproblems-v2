functionality:
  name: "scvi"
  namespace: "batch_integration/methods"
  version: "main_build"
  arguments:
  - type: "file"
    name: "--input"
    description: "Unintegrated AnnData HDF5 file."
    info:
      short_description: "Unintegrated"
      slots:
        layers:
        - type: "integer"
          name: "counts"
          description: "Raw counts"
          required: true
        - type: "double"
          name: "normalized"
          description: "Normalized expression values"
          required: true
        obs:
        - type: "string"
          name: "batch"
          description: "Batch information"
          required: true
        - type: "string"
          name: "label"
          description: "label information"
          required: true
        var:
        - type: "boolean"
          name: "hvg"
          description: "Whether or not the feature is considered to be a 'highly variable\
            \ gene'"
          required: true
        obsm:
        - type: "double"
          name: "X_pca"
          description: "The resulting PCA embedding."
          required: true
        obsp:
        - type: "double"
          name: "knn_connectivities"
          description: "K nearest neighbors connectivities matrix."
          required: true
        uns:
        - type: "string"
          name: "dataset_id"
          description: "A unique identifier for the dataset"
          required: true
        - type: "string"
          name: "normalization_id"
          description: "Which normalization was used"
          required: true
        - type: "string"
          name: "dataset_organism"
          description: "Which normalization was used"
          required: true
    example:
    - "resources_test/batch_integration/pancreas/unintegrated.h5ad"
    must_exist: true
    create_parent: true
    required: false
    direction: "input"
    multiple: false
    multiple_sep: ":"
    dest: "par"
  - type: "file"
    name: "--output"
    description: "Integrated AnnData HDF5 file."
    info:
      prediction_type: "embedding"
      short_description: "Integrated embedding"
      slots:
        obsm:
        - type: "double"
          name: "X_pca"
          description: "The resulting PCA embedding."
          required: true
        - type: "double"
          name: "X_emb"
          description: "integration embedding prediction"
          required: true
        uns:
        - type: "string"
          name: "dataset_id"
          description: "A unique identifier for the dataset"
          required: true
        - type: "string"
          name: "normalization_id"
          description: "Which normalization was used"
          required: true
        - type: "string"
          name: "dataset_organism"
          description: "Which normalization was used"
          required: true
        - type: "string"
          name: "method_id"
          description: "A unique identifier for the method"
          required: true
        - type: "boolean"
          name: "hvg"
          description: "If the method was done on hvg or full"
          required: true
        - type: "string"
          name: "output_type"
          description: "what kind of output has been generated"
          required: true
        layers:
        - type: "integer"
          name: "counts"
          description: "Raw counts"
          required: true
        - type: "double"
          name: "normalized"
          description: "Normalized expression values"
          required: true
        obs:
        - type: "string"
          name: "batch"
          description: "Batch information"
          required: true
        - type: "string"
          name: "label"
          description: "label information"
          required: true
        var:
        - type: "boolean"
          name: "hvg"
          description: "Whether or not the feature is considered to be a 'highly variable\
            \ gene'"
          required: true
        obsp:
        - type: "double"
          name: "knn_connectivities"
          description: "K nearest neighbors connectivities matrix."
          required: true
    example:
    - "resources_test/batch_integration/pancreas/scvi.h5ad"
    must_exist: true
    create_parent: true
    required: false
    direction: "output"
    multiple: false
    multiple_sep: ":"
    dest: "par"
  - type: "boolean"
    name: "--hvg"
    description: "Whether to subset to highly variable genes"
    default:
    - false
    required: false
    direction: "input"
    multiple: false
    multiple_sep: ":"
    dest: "par"
  resources:
  - type: "python_script"
    path: "script.py"
    is_executable: true
  description: "Run scVI on adata object"
  test_resources:
  - type: "file"
    path: "resources_test/batch_integration/pancreas"
    dest: "resources_test/batch_integration/pancreas"
  - type: "python_script"
    path: "src/common/comp_tests/check_method_config.py"
    is_executable: true
  - type: "python_script"
    path: "src/common/comp_tests/run_and_check_adata.py"
    is_executable: true
  - type: "file"
    path: "src/common/library.bib"
  info:
    pretty_name: "scVI"
    summary: "scVI combines a variational autoencoder with a hierarchical Bayesian\
      \ model."
    description: "scVI combines a variational autoencoder with a hierarchical Bayesian\
      \ model. It uses the negative binomial distribution to describe gene expression\
      \ of each cell, conditioned on unobserved factors and the batch variable. ScVI\
      \ is run as implemented in Luecken et al.\n"
    reference: "lopez2018deep"
    repository_url: "https://github.com/YosefLab/scvi-tools"
    documentation_url: "https://github.com/YosefLab/scvi-tools#readme"
    v1_url: "openproblems/tasks/_batch_integration/batch_integration_graph/methods/scvi.py"
    v1_commit: "29803b95c88b4ec5921df2eec7111fd5d1a95daf"
    preferred_normalization: "log_cpm"
    variants:
      scvi_full_unscaled: null
      scvi_hvg_unscaled:
        hvg: true
    type: "method"
    output_type: "embedding"
    type_info:
      label: "Method (embedding)"
      description: "A batch integration method which outputs a batch-corrected embedding.\n"
  status: "enabled"
  set_wd_to_resources_dir: false
platforms:
- type: "docker"
  id: "docker"
  image: "ghcr.io/openproblems-bio/base-r:latest"
  target_organization: "openproblems-bio"
  target_registry: "ghcr.io"
  namespace_separator: "/"
  resolve_volume: "Automatic"
  chown: true
  setup_strategy: "ifneedbepullelsecachedbuild"
  target_image_source: "https://github.com/openproblems-bio/openproblems-v2"
  setup:
  - type: "python"
    user: false
    pypi:
    - "scvi-tools"
    - "scanpy"
    - "scib==1.1.3"
    upgrade: true
- type: "nextflow"
  id: "nextflow"
  variant: "vdsl3"
  directives:
    tag: "$id"
  auto:
    simplifyInput: true
    simplifyOutput: true
    transcript: false
    publish: false
  debug: false
  container: "docker"
info:
  config: "/home/runner/work/openproblems-v2/openproblems-v2/src/tasks/batch_integration/methods/scvi/config.vsh.yaml"
  platform: "docker"
  output: "/home/runner/work/openproblems-v2/openproblems-v2/target/docker/batch_integration/methods/scvi"
  executable: "/home/runner/work/openproblems-v2/openproblems-v2/target/docker/batch_integration/methods/scvi/scvi"
  viash_version: "0.7.3"
  git_commit: "040e2a4f4ef17a592453d7a41a93a448b6d53c5b"
  git_remote: "https://github.com/openproblems-bio/openproblems-v2"
