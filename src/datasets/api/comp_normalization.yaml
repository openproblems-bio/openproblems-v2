functionality:
  arguments:
    - name: "--input"
      __inherits__: anndata_raw_dataset.yaml
    - name: "--output"
      type: file
      description: "A preprocessed dataset"
      example: "preprocessed.h5ad"
      info:
        short_description: "Preprocessed dataset"
        slots:
          layers: 
            - type: integer
              name: counts
              description: Raw counts
              required: true
            - type: double
              name: $par_layer_output
              description: Log-transformed normalised counts
          obs:
            - type: string
              name: celltype
              description: Cell type information
              required: false
            - type: string
              name: batch
              description: Batch information
              required: false
            - type: string
              name: tissue
              description: Tissue information
              required: false
          uns:
            - type: string
              name: dataset_id
              description: "A unique identifier for the dataset"
              required: true
      direction: output
    
    # not including this because we need to override the default
    # - name: "--layer_output"
    #   type: string
    #   default: "log_cpm"
    #   description: The name of the layer in which to store the log normalized data.
  test_resources:
    - type: python_script
      path: generic_test.py
      text: |
        import anndata as ad
        import subprocess
        from os import path

        input_path = meta["resources_dir"] + "/pancreas/dataset.h5ad"
        output_path = "output.h5ad"
        output_layer = "norm_layer"

        cmd = [
          meta['executable'],
          "--input", input_path,
          "--output", output_path,
          "--layer_output", output_layer
        ]

        print(">> Running script as test")
        out = subprocess.check_output(cmd).decode("utf-8")

        print(">> Checking whether output file exists")
        assert path.exists(output_path)

        print(">> Reading h5ad files")
        input = ad.read_h5ad(input_path)
        output = ad.read_h5ad(output_path)
        print("input:", input)
        print("output:", output)

        print(">> Checking whether output data structures were added")
        assert output_layer in output.layers

        print("Checking whether data from input was copied properly to output")
        assert input.n_obs == output.n_obs
        assert input.uns["dataset_id"] == output.uns["dataset_id"]

        print("All checks succeeded!")
    - path: ../../../../resources_test/common/pancreas

