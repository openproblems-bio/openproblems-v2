functionality:
  name: "knn_auc"
  namespace: "modality_alignment/metrics"
  version: "main_build"
  authors:
  - name: "Scott Gigante"
    roles:
    - "maintainer"
    - "author"
    props:
      github: "scottgigante"
  inputs: []
  outputs: []
  arguments:
  - type: "file"
    name: "--input"
    alternatives:
    - "-i"
    description: "File to input h5ad containing: `ad.X`, `ad.obsm['aligned']`, `ad.obsm['mode2_aligned']`"
    example: []
    default:
    - "input.h5ad"
    must_exist: true
    create_parent: true
    required: false
    direction: "input"
    multiple: false
    multiple_sep: ":"
    dest: "par"
  - type: "file"
    name: "--output"
    alternatives:
    - "-o"
    description: "Output h5ad file containing `ad.uns['metric_value']`"
    example: []
    default:
    - "output.h5ad"
    must_exist: true
    create_parent: true
    required: false
    direction: "output"
    multiple: false
    multiple_sep: ":"
    dest: "par"
  - type: "double"
    name: "--proportion_neighbors"
    alternatives: []
    description: "The propotion of neighbours to use in computing the KNN."
    example: []
    default:
    - 0.1
    required: false
    direction: "input"
    multiple: false
    multiple_sep: ":"
    dest: "par"
  - type: "integer"
    name: "--n_svd"
    alternatives: []
    description: "The maximum number of SVDs to use."
    example: []
    default:
    - 100
    required: false
    choices: []
    direction: "input"
    multiple: false
    multiple_sep: ":"
    dest: "par"
  argument_groups: []
  resources:
  - type: "python_script"
    path: "script.py"
    is_executable: true
  description: "Compute the kNN Area Under the Curve"
  test_resources:
  - type: "python_script"
    path: "test.py"
    is_executable: true
  - type: "file"
    path: "../../resources/sample_output.h5ad"
  info:
    method_label: "KNN-AUC"
    metric_name: "kNN Area Under the Curve"
    maximize: "true"
  status: "enabled"
  requirements:
    commands: []
  set_wd_to_resources_dir: false
platforms:
- type: "docker"
  id: "docker"
  image: "python:3.8"
  target_organization: "openproblems-bio"
  target_registry: "ghcr.io"
  namespace_separator: "_"
  resolve_volume: "Automatic"
  chown: true
  port: []
  setup_strategy: "ifneedbepullelsecachedbuild"
  run_args: []
  target_image_source: "https://github.com/openproblems-bio/openproblems-v2"
  setup:
  - type: "python"
    user: false
    packages:
    - "anndata"
    - "numpy"
    - "sklearn"
    - "scanpy"
    pip: []
    pypi: []
    git: []
    github: []
    gitlab: []
    mercurial: []
    svn: []
    bazaar: []
    url: []
    script: []
    upgrade: true
  test_setup: []
- type: "nextflow"
  id: "nextflow"
  variant: "vdsl3"
  directives:
    accelerator: {}
    conda: []
    containerOptions: []
    label: []
    module: []
    pod: []
    publishDir: []
    queue: []
    tag: "$id"
  auto:
    simplifyInput: true
    simplifyOutput: true
    transcript: false
    publish: false
  debug: false
  container: "docker"
info:
  config: "/home/runner/work/openproblems-v2/openproblems-v2/src/modality_alignment/metrics/knn_auc/config.vsh.yaml"
  platform: "nextflow"
  output: "/home/runner/work/openproblems-v2/openproblems-v2/target/nextflow/modality_alignment/metrics/knn_auc"
  executable: "/home/runner/work/openproblems-v2/openproblems-v2/target/nextflow/modality_alignment/metrics/knn_auc/knn_auc"
  viash_version: "0.6.6"
  git_commit: "aab36e7ab0dd9c5d649e1324500264bb9d4321a3"
  git_remote: "https://github.com/openproblems-bio/openproblems-v2"
