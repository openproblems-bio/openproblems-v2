functionality:
  name: "scanvi_scarches"
  namespace: "label_projection/methods"
  version: "main_build"
  arguments:
  - type: "file"
    name: "--input_train"
    info:
      label: "Training data"
      summary: "The training data"
      slots:
        layers:
        - type: "integer"
          name: "counts"
          description: "Raw counts"
          required: true
        - type: "double"
          name: "normalized"
          description: "Normalized counts"
          required: true
        obs:
        - type: "string"
          name: "label"
          description: "Ground truth cell type labels"
          required: true
        - type: "string"
          name: "batch"
          description: "Batch information"
          required: true
        var:
        - type: "boolean"
          name: "hvg"
          description: "Whether or not the feature is considered to be a 'highly variable\
            \ gene'"
          required: true
        - type: "integer"
          name: "hvg_score"
          description: "A ranking of the features by hvg."
          required: true
        obsm:
        - type: "double"
          name: "X_pca"
          description: "The resulting PCA embedding."
          required: true
        uns:
        - type: "string"
          name: "dataset_id"
          description: "A unique identifier for the dataset"
          required: true
        - type: "string"
          name: "normalization_id"
          description: "Which normalization was used"
          required: true
    example:
    - "resources_test/label_projection/pancreas/train.h5ad"
    must_exist: true
    create_parent: true
    required: true
    direction: "input"
    multiple: false
    multiple_sep: ":"
    dest: "par"
  - type: "file"
    name: "--input_test"
    info:
      label: "Test data"
      summary: "The test data (without labels)"
      slots:
        layers:
        - type: "integer"
          name: "counts"
          description: "Raw counts"
          required: true
        - type: "double"
          name: "normalized"
          description: "Normalized counts"
          required: true
        obs:
        - type: "string"
          name: "batch"
          description: "Batch information"
          required: true
        var:
        - type: "boolean"
          name: "hvg"
          description: "Whether or not the feature is considered to be a 'highly variable\
            \ gene'"
          required: true
        - type: "integer"
          name: "hvg_score"
          description: "A ranking of the features by hvg."
          required: true
        obsm:
        - type: "double"
          name: "X_pca"
          description: "The resulting PCA embedding."
          required: true
        uns:
        - type: "string"
          name: "dataset_id"
          description: "A unique identifier for the dataset"
          required: true
        - type: "string"
          name: "normalization_id"
          description: "Which normalization was used"
          required: true
    example:
    - "resources_test/label_projection/pancreas/test.h5ad"
    must_exist: true
    create_parent: true
    required: true
    direction: "input"
    multiple: false
    multiple_sep: ":"
    dest: "par"
  - type: "file"
    name: "--output"
    info:
      label: "Prediction"
      summary: "The prediction file"
      slots:
        obs:
        - type: "string"
          name: "label_pred"
          description: "Predicted labels for the test cells."
          required: true
        uns:
        - type: "string"
          name: "dataset_id"
          description: "A unique identifier for the dataset"
          required: true
        - type: "string"
          name: "normalization_id"
          description: "Which normalization was used"
          required: true
        - type: "string"
          name: "method_id"
          description: "A unique identifier for the method"
          required: true
    example:
    - "resources_test/label_projection/pancreas/knn.h5ad"
    must_exist: true
    create_parent: true
    required: true
    direction: "output"
    multiple: false
    multiple_sep: ":"
    dest: "par"
  - type: "integer"
    name: "--n_latent"
    description: "Number of units in the latent layer"
    info: null
    default:
    - 30
    required: false
    direction: "input"
    multiple: false
    multiple_sep: ":"
    dest: "par"
  - type: "integer"
    name: "--n_layers"
    description: "Number of hidden layers"
    info: null
    default:
    - 2
    required: false
    direction: "input"
    multiple: false
    multiple_sep: ":"
    dest: "par"
  - type: "integer"
    name: "--n_hidden"
    description: "Number of units in the hidden layers"
    info: null
    default:
    - 128
    required: false
    direction: "input"
    multiple: false
    multiple_sep: ":"
    dest: "par"
  - type: "double"
    name: "--dropout_rate"
    description: "Rate of dropout applied in training"
    info: null
    default:
    - 0.2
    required: false
    direction: "input"
    multiple: false
    multiple_sep: ":"
    dest: "par"
  - type: "integer"
    name: "--max_epochs"
    description: "Maximum number of training epochs"
    info: null
    default:
    - 2
    required: false
    direction: "input"
    multiple: false
    multiple_sep: ":"
    dest: "par"
  resources:
  - type: "python_script"
    path: "script.py"
    is_executable: true
  test_resources:
  - type: "file"
    path: "resources_test/label_projection/pancreas"
    dest: "resources_test/label_projection/pancreas"
  - type: "python_script"
    path: "src/common/comp_tests/check_method_config.py"
    is_executable: true
  - type: "python_script"
    path: "src/common/comp_tests/run_and_check_adata.py"
    is_executable: true
  - type: "file"
    path: "src/common/library.bib"
  - type: "file"
    path: "src/common/api"
  info:
    label: "scANVI+scArches"
    summary: "Query to reference single-cell integration with transfer learning with\
      \ scANVI and scArches"
    description: "scArches+scANVI or \"Single-cell architecture surgery\" is a deep\
      \ learning method for mapping new datasets onto a pre-existing reference model,\
      \ using transfer learning and parameter optimization. It first uses scANVI to\
      \ build a reference model from the training data, and then apply scArches to\
      \ map the test data onto the reference model and make predictions."
    reference: "lotfollahi2020query"
    documentation_url: "https://docs.scvi-tools.org"
    repository_url: "https://github.com/scverse/scvi-tools"
    preferred_normalization: "counts"
    v1:
      path: "openproblems/tasks/label_projection/methods/scvi_tools.py"
      commit: "e3be930c6d4bbd656ab1e656badb52bb50e6cdd6"
    variants:
      scanvi_scarches: null
    type: "method"
    type_info:
      label: "Method"
      summary: "A label projection method."
      description: "A label projection method to predict the labels of a new \"test\"\
        \ndataset based on an annotated \"training\" dataset.\n"
  status: "enabled"
  set_wd_to_resources_dir: false
platforms:
- type: "docker"
  id: "docker"
  image: "ghcr.io/openproblems-bio/base_python:1.0.1"
  target_organization: "openproblems-bio"
  target_registry: "ghcr.io"
  namespace_separator: "/"
  resolve_volume: "Automatic"
  chown: true
  setup_strategy: "ifneedbepullelsecachedbuild"
  target_image_source: "https://github.com/openproblems-bio/openproblems-v2"
  setup:
  - type: "python"
    user: false
    pypi:
    - "scvi-tools"
    upgrade: true
  entrypoint: []
  cmd: null
- type: "nextflow"
  id: "nextflow"
  directives:
    label:
    - "midmem"
    - "midcpu"
    tag: "$id"
  auto:
    simplifyInput: true
    simplifyOutput: true
    transcript: false
    publish: false
  config:
    labels:
      mem1gb: "memory = 1.GB"
      mem2gb: "memory = 2.GB"
      mem4gb: "memory = 4.GB"
      mem8gb: "memory = 8.GB"
      mem16gb: "memory = 16.GB"
      mem32gb: "memory = 32.GB"
      mem64gb: "memory = 64.GB"
      mem128gb: "memory = 128.GB"
      mem256gb: "memory = 256.GB"
      mem512gb: "memory = 512.GB"
      mem1tb: "memory = 1.TB"
      mem2tb: "memory = 2.TB"
      mem4tb: "memory = 4.TB"
      mem8tb: "memory = 8.TB"
      mem16tb: "memory = 16.TB"
      mem32tb: "memory = 32.TB"
      mem64tb: "memory = 64.TB"
      mem128tb: "memory = 128.TB"
      mem256tb: "memory = 256.TB"
      mem512tb: "memory = 512.TB"
      cpu1: "cpus = 1"
      cpu2: "cpus = 2"
      cpu5: "cpus = 5"
      cpu10: "cpus = 10"
      cpu20: "cpus = 20"
      cpu50: "cpus = 50"
      cpu100: "cpus = 100"
      cpu200: "cpus = 200"
      cpu500: "cpus = 500"
      cpu1000: "cpus = 1000"
  debug: false
  container: "docker"
info:
  config: "/home/runner/work/openproblems-v2/openproblems-v2/src/tasks/label_projection/methods/scanvi_scarches/config.vsh.yaml"
  platform: "docker"
  output: "/home/runner/work/openproblems-v2/openproblems-v2/target/docker/label_projection/methods/scanvi_scarches"
  executable: "/home/runner/work/openproblems-v2/openproblems-v2/target/docker/label_projection/methods/scanvi_scarches/scanvi_scarches"
  viash_version: "0.7.5"
  git_commit: "e485faa7fbc056b86d500962183e1d5e1f00b3f7"
  git_remote: "https://github.com/openproblems-bio/openproblems-v2"
