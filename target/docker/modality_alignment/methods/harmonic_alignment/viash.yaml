functionality:
  name: "harmonic_alignment"
  namespace: "modality_alignment/methods"
  version: "main_build"
  authors:
  - name: "Scott Gigante"
    roles:
    - "maintainer"
    - "author"
    props:
      github: "scottgigante"
  inputs: []
  outputs: []
  arguments:
  - type: "file"
    name: "--input_mod1"
    alternatives: []
    description: "Input h5ad file containing at least `ad.X` and `ad.obsm['mode2']`."
    example: []
    default:
    - "dataset_mod1_censored.h5ad"
    must_exist: false
    required: false
    direction: "input"
    multiple: false
    multiple_sep: ":"
    dest: "par"
  - type: "file"
    name: "--output"
    alternatives: []
    description: "Output h5ad file containing both RNA and ADT data"
    example: []
    default:
    - "output.h5ad"
    must_exist: false
    required: false
    direction: "output"
    multiple: false
    multiple_sep: ":"
    dest: "par"
  - type: "integer"
    name: "--n_svd"
    alternatives: []
    description: "Number of SVDs to use. Bounded by the number of columns in `ad.X`\
      \ and `ad.obsm['mode2']`."
    example: []
    default:
    - 100
    required: false
    choices: []
    direction: "input"
    multiple: false
    multiple_sep: ":"
    dest: "par"
  - type: "integer"
    name: "--n_pca_XY"
    alternatives: []
    description: "Default number of principal components on which to build graph."
    example: []
    default:
    - 100
    required: false
    choices: []
    direction: "input"
    multiple: false
    multiple_sep: ":"
    dest: "par"
  - type: "integer"
    name: "--n_eigenvectors"
    alternatives: []
    description: "Number of eigenvectors of the normalized Laplacian on which to perform\
      \ alignment."
    example: []
    default:
    - 100
    required: false
    choices: []
    direction: "input"
    multiple: false
    multiple_sep: ":"
    dest: "par"
  argument_groups: []
  resources:
  - type: "python_script"
    path: "script.py"
    is_executable: true
  - type: "file"
    path: "../../utils/preprocessing.py"
  description: "Run Harmonic Alignment"
  test_resources:
  - type: "python_script"
    path: "test.py"
    is_executable: true
  - type: "file"
    path: "../../resources/sample_dataset.h5ad"
  info:
    method_name: "Harmonic Alignment"
    paper_name: "Harmonic Alignment"
    paper_doi: "10.1137/1.9781611976236.36"
    paper_year: "2020"
    code_url: "https://github.com/KrishnaswamyLab/harmonic-alignment"
  status: "enabled"
  requirements:
    commands: []
  set_wd_to_resources_dir: false
platforms: []
info:
  config: "src/modality_alignment/methods/harmonic_alignment/config.vsh.yaml"
  platform: "docker"
  output: "target/docker/modality_alignment/methods/harmonic_alignment"
  executable: "target/docker/modality_alignment/methods/harmonic_alignment/harmonic_alignment"
  viash_version: "0.6.2"
  git_commit: "0b182c07fb8cc9306829c068d4ea600ee26891fc"
  git_remote: "https://github.com/openproblems-bio/openproblems-v2"
