functionality:
  name: "diffusion_maps"
  namespace: "dimensionality_reduction/control_methods"
  version: "main_build"
  arguments:
  - type: "file"
    name: "--input"
    info:
      label: "Dataset"
      summary: "The dataset to pass to a method."
      slots:
        layers:
        - type: "integer"
          name: "counts"
          description: "Raw counts"
          required: true
        - type: "double"
          name: "normalized"
          description: "Normalized expression values"
          required: true
        var:
        - type: "double"
          name: "hvg_score"
          description: "High variability gene score (normalized dispersion). The greater,\
            \ the more variable."
          required: true
        uns:
        - type: "string"
          name: "dataset_id"
          description: "A unique identifier for the dataset"
          required: true
        - type: "string"
          name: "normalization_id"
          description: "Which normalization was used"
          required: true
    example:
    - "resources_test/dimensionality_reduction/pancreas/dataset.h5ad"
    must_exist: true
    create_parent: true
    required: true
    direction: "input"
    multiple: false
    multiple_sep: ":"
    dest: "par"
  - type: "file"
    name: "--input_solution"
    info:
      label: "Test data"
      summary: "The data for evaluating a dimensionality reduction."
      slots:
        layers:
        - type: "integer"
          name: "counts"
          description: "Raw counts"
          required: true
        - type: "double"
          name: "normalized"
          description: "Normalized expression values"
          required: true
        var:
        - type: "double"
          name: "hvg_score"
          description: "High variability gene score (normalized dispersion). The greater,\
            \ the more variable."
          required: true
        uns:
        - type: "string"
          name: "dataset_id"
          description: "A unique identifier for the dataset"
          required: true
        - type: "string"
          name: "normalization_id"
          description: "Which normalization was used"
          required: true
    example:
    - "resources_test/dimensionality_reduction/pancreas/solution.h5ad"
    must_exist: true
    create_parent: true
    required: true
    direction: "input"
    multiple: false
    multiple_sep: ":"
    dest: "par"
  - type: "file"
    name: "--output"
    info:
      label: "Embedding"
      summary: "A dataset with dimensionality reduction embedding."
      slots:
        obsm:
        - type: "double"
          name: "X_emb"
          description: "The dimensionally reduced embedding."
          required: true
        uns:
        - type: "string"
          name: "dataset_id"
          description: "A unique identifier for the dataset"
          required: true
        - type: "string"
          name: "method_id"
          description: "A unique identifier for the method"
          required: true
        - type: "string"
          name: "normalization_id"
          description: "Which normalization was used"
          required: true
    example:
    - "resources_test/dimensionality_reduction/pancreas/embedding.h5ad"
    must_exist: true
    create_parent: true
    required: true
    direction: "output"
    multiple: false
    multiple_sep: ":"
    dest: "par"
  - type: "integer"
    name: "--n_comps"
    description: "Number of components to use for the embedding."
    info: null
    default:
    - 2
    required: false
    direction: "input"
    multiple: false
    multiple_sep: ":"
    dest: "par"
  - type: "integer"
    name: "t"
    description: "Number to power the eigenvalues by."
    info: null
    default:
    - 1
    required: false
    direction: "input"
    multiple: false
    multiple_sep: ":"
    dest: "par"
  - type: "integer"
    name: "n_retries"
    description: "Number of times to retry if the embedding fails, each time adding\
      \ noise."
    info: null
    default:
    - 1
    required: false
    direction: "input"
    multiple: false
    multiple_sep: ":"
    dest: "par"
  resources:
  - type: "python_script"
    path: "script.py"
    is_executable: true
  test_resources:
  - type: "file"
    path: "resources_test/dimensionality_reduction/pancreas/"
    dest: "resources_test/dimensionality_reduction/pancreas/"
  - type: "python_script"
    path: "src/common/comp_tests/check_method_config.py"
    is_executable: true
  - type: "python_script"
    path: "src/common/comp_tests/run_and_check_adata.py"
    is_executable: true
  info:
    label: "Diffusion maps"
    summary: "Positive control by Use 1000-dimensional diffusions maps as an embedding."
    description: "This serves as a positive control since it uses 1000-dimensional\
      \ diffusions maps as an embedding"
    reference: "coifman2006diffusion"
    documentation_url: "https://github.com/openproblems-bio/openproblems"
    repository_url: "https://github.com/openproblems-bio/openproblems"
    v1:
      path: "openproblems/tasks/dimensionality_reduction/methods/diffusion_map.py"
      commit: "b3456fd73c04c28516f6df34c57e6e3e8b0dab32"
    preferred_normalization: "log_cp10k"
    variants:
      diffusion_map: null
    type: "control_method"
    type_info:
      label: "Control method"
      summary: "Quality control methods for verifying the pipeline."
      description: "Control methods have the same interface as the regular methods\n\
        but also receive the solution object as input. It serves as a\nstarting point\
        \ to test the relative accuracy of new methods in\nthe task, and also as a\
        \ quality control for the metrics defined\nin the task.\n"
  status: "enabled"
  set_wd_to_resources_dir: false
platforms:
- type: "docker"
  id: "docker"
  image: "ghcr.io/openproblems-bio/base_python:1.0.1"
  target_organization: "openproblems-bio"
  target_registry: "ghcr.io"
  namespace_separator: "/"
  resolve_volume: "Automatic"
  chown: true
  setup_strategy: "ifneedbepullelsecachedbuild"
  target_image_source: "https://github.com/openproblems-bio/openproblems-v2"
  setup:
  - type: "python"
    user: false
    pypi:
    - "umap-learn"
    - "scipy"
    - "numpy"
    upgrade: true
  entrypoint: []
  cmd: null
- type: "nextflow"
  id: "nextflow"
  directives:
    label:
    - "midtime"
    - "highmem"
    - "highcpu"
    tag: "$id"
  auto:
    simplifyInput: true
    simplifyOutput: false
    transcript: false
    publish: false
  config:
    labels:
      mem1gb: "memory = 1.GB"
      mem2gb: "memory = 2.GB"
      mem4gb: "memory = 4.GB"
      mem8gb: "memory = 8.GB"
      mem16gb: "memory = 16.GB"
      mem32gb: "memory = 32.GB"
      mem64gb: "memory = 64.GB"
      mem128gb: "memory = 128.GB"
      mem256gb: "memory = 256.GB"
      mem512gb: "memory = 512.GB"
      mem1tb: "memory = 1.TB"
      mem2tb: "memory = 2.TB"
      mem4tb: "memory = 4.TB"
      mem8tb: "memory = 8.TB"
      mem16tb: "memory = 16.TB"
      mem32tb: "memory = 32.TB"
      mem64tb: "memory = 64.TB"
      mem128tb: "memory = 128.TB"
      mem256tb: "memory = 256.TB"
      mem512tb: "memory = 512.TB"
      cpu1: "cpus = 1"
      cpu2: "cpus = 2"
      cpu5: "cpus = 5"
      cpu10: "cpus = 10"
      cpu20: "cpus = 20"
      cpu50: "cpus = 50"
      cpu100: "cpus = 100"
      cpu200: "cpus = 200"
      cpu500: "cpus = 500"
      cpu1000: "cpus = 1000"
  debug: false
  container: "docker"
info:
  config: "/home/runner/work/openproblems-v2/openproblems-v2/src/tasks/dimensionality_reduction/methods/diffusion_map/config.vsh.yaml"
  platform: "nextflow"
  output: "/home/runner/work/openproblems-v2/openproblems-v2/target/nextflow/dimensionality_reduction/control_methods/diffusion_maps"
  executable: "/home/runner/work/openproblems-v2/openproblems-v2/target/nextflow/dimensionality_reduction/control_methods/diffusion_maps/diffusion_maps"
  viash_version: "0.7.5"
  git_commit: "5095f8d4f25c4c7a284a2b30c4d7f159df75eb77"
  git_remote: "https://github.com/openproblems-bio/openproblems-v2"
