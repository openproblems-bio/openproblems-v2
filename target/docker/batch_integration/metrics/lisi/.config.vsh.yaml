functionality:
  name: "lisi"
  namespace: "batch_integration/metrics"
  version: "main_build"
  arguments:
  - type: "file"
    name: "--input_integrated"
    info:
      prediction_type: "graph"
      label: "Integrated Graph"
      summary: "Integrated AnnData HDF5 file."
      slots:
        obsp:
        - type: "double"
          name: "knn_distances"
          description: "K nearest neighbors distance matrix."
          required: true
        - type: "double"
          name: "knn_connectivities"
          description: "K nearest neighbors connectivities matrix."
          required: true
        - type: "double"
          name: "connectivities"
          description: "Neighbors connectivities matrix."
          required: true
        - type: "double"
          name: "distances"
          description: "Neighbors connectivities matrix."
          required: true
        uns:
        - type: "string"
          name: "dataset_id"
          description: "A unique identifier for the dataset"
          required: true
        - type: "string"
          name: "normalization_id"
          description: "Which normalization was used"
          required: true
        - name: "dataset_organism"
          type: "string"
          description: "The organism of the sample in the dataset."
          required: false
        - type: "object"
          name: "knn"
          description: "Supplementary K nearest neighbors data."
          required: true
        - type: "string"
          name: "method_id"
          description: "A unique identifier for the method"
          required: true
        - type: "object"
          name: "neighbors"
          description: "Supplementary K nearest neighbors data."
          required: true
        layers:
        - type: "integer"
          name: "counts"
          description: "Raw counts"
          required: true
        - type: "double"
          name: "normalized"
          description: "Normalized expression values"
          required: true
        obs:
        - type: "string"
          name: "batch"
          description: "Batch information"
          required: true
        - type: "string"
          name: "label"
          description: "label information"
          required: true
        var:
        - type: "boolean"
          name: "hvg"
          description: "Whether or not the feature is considered to be a 'highly variable\
            \ gene'"
          required: true
        obsm:
        - type: "double"
          name: "X_pca"
          description: "The resulting PCA embedding."
          required: true
    example:
    - "resources_test/batch_integration/pancreas/integrated_graph.h5ad"
    must_exist: true
    create_parent: true
    required: true
    direction: "input"
    multiple: false
    multiple_sep: ":"
    dest: "par"
  - type: "file"
    name: "--input_solution"
    info:
      label: "Solution"
      summary: "Solution dataset"
      slots:
        layers:
        - type: "integer"
          name: "counts"
          description: "Raw counts"
          required: true
        - type: "double"
          name: "normalized"
          description: "Normalized expression values"
          required: true
        obs:
        - type: "string"
          name: "batch"
          description: "Batch information"
          required: true
        - type: "string"
          name: "label"
          description: "label information"
          required: true
        var:
        - type: "boolean"
          name: "hvg"
          description: "Whether or not the feature is considered to be a 'highly variable\
            \ gene'"
          required: true
        obsm:
        - type: "double"
          name: "X_pca"
          description: "The resulting PCA embedding."
          required: true
        obsp:
        - type: "double"
          name: "knn_distances"
          description: "K nearest neighbors distance matrix."
          required: true
        - type: "double"
          name: "knn_connectivities"
          description: "K nearest neighbors connectivities matrix."
          required: true
        uns:
        - type: "string"
          name: "dataset_id"
          description: "A unique identifier for the dataset"
          required: true
        - type: "string"
          name: "normalization_id"
          description: "Which normalization was used"
          required: true
        - name: "dataset_organism"
          type: "string"
          description: "The organism of the sample in the dataset."
          required: false
        - type: "object"
          name: "knn"
          description: "Supplementary K nearest neighbors data."
          required: true
    example:
    - "resources_test/batch_integration/pancreas/solution.h5ad"
    must_exist: true
    create_parent: true
    required: true
    direction: "input"
    multiple: false
    multiple_sep: ":"
    dest: "par"
  - type: "file"
    name: "--output"
    info:
      label: "Score"
      summary: "Metric score file"
      slots:
        uns:
        - type: "string"
          name: "dataset_id"
          description: "A unique identifier for the dataset"
          required: true
        - type: "string"
          name: "normalization_id"
          description: "Which normalization was used"
          required: true
        - type: "string"
          name: "method_id"
          description: "A unique identifier for the method"
          required: true
        - type: "string"
          name: "metric_ids"
          description: "One or more unique metric identifiers"
          multiple: true
          required: true
        - type: "double"
          name: "metric_values"
          description: "The metric values obtained for the given prediction. Must\
            \ be of same length as 'metric_ids'."
          multiple: true
          required: true
    example:
    - "score.h5ad"
    must_exist: true
    create_parent: true
    required: true
    direction: "output"
    multiple: false
    multiple_sep: ":"
    dest: "par"
  resources:
  - type: "python_script"
    path: "script.py"
    is_executable: true
  test_resources:
  - type: "file"
    path: "resources_test/batch_integration/pancreas"
    dest: "resources_test/batch_integration/pancreas"
  - type: "python_script"
    path: "src/common/comp_tests/check_metric_config.py"
    is_executable: true
  - type: "python_script"
    path: "src/common/comp_tests/run_and_check_adata.py"
    is_executable: true
  - type: "file"
    path: "src/common/library.bib"
  info:
    metrics:
    - name: "ilisi"
      label: "iLISI"
      summary: "Local inverse Simpson's Index"
      description: "Local Inverse Simpson's Index metrics adapted from Korsunsky et\
        \ al. 2019 to run on\nall full feature, embedding and kNN integration outputs\
        \ via shortest path-based\ndistance computation on single-cell kNN graphs.\
        \ The metric assesses whether clusters\nof cells in a single-cell RNA-seq\
        \ dataset are well-mixed across a categorical batch\nvariable.\n\nThe original\
        \ LISI score ranges from 0 to the number of categories, with the latter\n\
        indicating good cell mixing. This is rescaled to a score between 0 and 1.\n"
      reference: "luecken2022benchmarking"
      min: 0
      max: 1
      maximize: true
      repository_url: "https://github.com/theislab/scib/blob/ed3e2846414ca1e3dc07552c0eef1e68d82230d4/scib/metrics/lisi.py"
      documentation_url: "https://scib.readthedocs.io/en/latest/api/scib.metrics.ilisi_graph.html"
    - name: "clisi"
      label: "cLISI"
      summary: "Local inverse Simpson's Index"
      description: "Local Inverse Simpson's Index metrics adapted from Korsunsky et\
        \ al. 2019 to run on\nall full feature, embedding and kNN integration outputs\
        \ via shortest path-based\ndistance computation on single-cell kNN graphs.\
        \ The metric assesses whether clusters\nof cells in a single-cell RNA-seq\
        \ dataset are well-mixed across a categorical cell type variable.\n\nThe original\
        \ LISI score ranges from 0 to the number of categories, with the latter indicating\
        \ good cell mixing. This is rescaled to a score between 0 and 1.\n"
      reference: "luecken2022benchmarking"
      min: 0
      max: 1
      maximize: true
      repository_url: "https://github.com/theislab/scib/blob/ed3e2846414ca1e3dc07552c0eef1e68d82230d4/scib/metrics/lisi.py"
      documentation_url: "https://scib.readthedocs.io/en/latest/api/scib.metrics.clisi_graph.html"
    type: "metric"
    subtype: "graph"
    type_info:
      label: "Metric (graph)"
      summary: "A batch integration graph metric."
      description: "A metric for evaluating batch corrected cell graphs.\n"
  status: "enabled"
  set_wd_to_resources_dir: false
platforms:
- type: "docker"
  id: "docker"
  image: "ghcr.io/openproblems-bio/base_python:1.0.1"
  target_organization: "openproblems-bio"
  target_registry: "ghcr.io"
  namespace_separator: "/"
  resolve_volume: "Automatic"
  chown: true
  setup_strategy: "ifneedbepullelsecachedbuild"
  target_image_source: "https://github.com/openproblems-bio/openproblems-v2"
  setup:
  - type: "python"
    user: false
    pypi:
    - "git+https://github.com/theislab/scib.git@v1.1.4"
    upgrade: true
  entrypoint: []
  cmd: null
- type: "nextflow"
  id: "nextflow"
  directives:
    label:
    - "midmem"
    - "lowcpu"
    tag: "$id"
  auto:
    simplifyInput: true
    simplifyOutput: false
    transcript: false
    publish: false
  config:
    labels:
      mem1gb: "memory = 1.GB"
      mem2gb: "memory = 2.GB"
      mem4gb: "memory = 4.GB"
      mem8gb: "memory = 8.GB"
      mem16gb: "memory = 16.GB"
      mem32gb: "memory = 32.GB"
      mem64gb: "memory = 64.GB"
      mem128gb: "memory = 128.GB"
      mem256gb: "memory = 256.GB"
      mem512gb: "memory = 512.GB"
      mem1tb: "memory = 1.TB"
      mem2tb: "memory = 2.TB"
      mem4tb: "memory = 4.TB"
      mem8tb: "memory = 8.TB"
      mem16tb: "memory = 16.TB"
      mem32tb: "memory = 32.TB"
      mem64tb: "memory = 64.TB"
      mem128tb: "memory = 128.TB"
      mem256tb: "memory = 256.TB"
      mem512tb: "memory = 512.TB"
      cpu1: "cpus = 1"
      cpu2: "cpus = 2"
      cpu5: "cpus = 5"
      cpu10: "cpus = 10"
      cpu20: "cpus = 20"
      cpu50: "cpus = 50"
      cpu100: "cpus = 100"
      cpu200: "cpus = 200"
      cpu500: "cpus = 500"
      cpu1000: "cpus = 1000"
  debug: false
  container: "docker"
info:
  config: "/home/runner/work/openproblems-v2/openproblems-v2/src/tasks/batch_integration/metrics/lisi/config.vsh.yaml"
  platform: "docker"
  output: "/home/runner/work/openproblems-v2/openproblems-v2/target/docker/batch_integration/metrics/lisi"
  executable: "/home/runner/work/openproblems-v2/openproblems-v2/target/docker/batch_integration/metrics/lisi/lisi"
  viash_version: "0.7.5"
  git_commit: "f165dba4553a20ec000b52da491dad6256f8e8a4"
  git_remote: "https://github.com/openproblems-bio/openproblems-v2"
