functionality:
  name: "log_scran_pooling"
  namespace: "datasets/normalization"
  version: "main_build"
  arguments:
  - type: "file"
    name: "--input"
    description: "An unprocessed dataset as output by a dataset loader."
    info:
      label: "Raw dataset"
      slots:
        layers:
        - type: "integer"
          name: "counts"
          description: "Raw counts"
          required: true
        obs:
        - type: "string"
          name: "celltype"
          description: "Cell type information"
          required: false
        - type: "string"
          name: "batch"
          description: "Batch information"
          required: false
        - type: "string"
          name: "tissue"
          description: "Tissue information"
          required: false
        uns:
        - type: "string"
          name: "dataset_id"
          description: "A unique identifier for the dataset"
          required: true
        - name: "dataset_name"
          type: "string"
          description: "Nicely formatted name."
          required: true
        - type: "string"
          name: "data_url"
          description: "Link to the original source of the dataset."
          required: false
        - name: "data_reference"
          type: "string"
          description: "Bibtex reference of the paper in which the dataset was published."
          required: false
        - name: "dataset_summary"
          type: "string"
          description: "Short description of the dataset."
          required: true
        - name: "dataset_description"
          type: "string"
          description: "Long description of the dataset."
          required: true
        - name: "dataset_organism"
          type: "string"
          description: "The organism of the sample in the dataset."
          required: false
    example:
    - "raw_dataset.h5ad"
    must_exist: true
    create_parent: true
    required: false
    direction: "input"
    multiple: false
    multiple_sep: ":"
    dest: "par"
  - type: "file"
    name: "--output"
    description: "A normalized dataset"
    info:
      label: "Normalized dataset"
      slots:
        layers:
        - type: "integer"
          name: "counts"
          description: "Raw counts"
          required: true
        - type: "double"
          name: "normalized"
          description: "Normalised expression values"
        obs:
        - type: "string"
          name: "celltype"
          description: "Cell type information"
          required: false
        - type: "string"
          name: "batch"
          description: "Batch information"
          required: false
        - type: "string"
          name: "tissue"
          description: "Tissue information"
          required: false
        - type: "double"
          name: "size_factors"
          description: "The size factors created by the normalisation method, if any."
          required: false
        uns:
        - type: "string"
          name: "dataset_id"
          description: "A unique identifier for the dataset"
          required: true
        - name: "dataset_name"
          type: "string"
          description: "Nicely formatted name."
          required: true
        - type: "string"
          name: "data_url"
          description: "Link to the original source of the dataset."
          required: false
        - name: "data_reference"
          type: "string"
          description: "Bibtex reference of the paper in which the dataset was published."
          required: false
        - name: "dataset_summary"
          type: "string"
          description: "Short description of the dataset."
          required: true
        - name: "dataset_description"
          type: "string"
          description: "Long description of the dataset."
          required: true
        - name: "dataset_organism"
          type: "string"
          description: "The organism of the sample in the dataset."
          required: false
    example:
    - "dataset.h5ad"
    must_exist: true
    create_parent: true
    required: false
    direction: "output"
    multiple: false
    multiple_sep: ":"
    dest: "par"
  - type: "string"
    name: "--layer_output"
    description: "The name of the layer in which to store the normalized data."
    default:
    - "normalized"
    required: false
    direction: "input"
    multiple: false
    multiple_sep: ":"
    dest: "par"
  - type: "string"
    name: "--obs_size_factors"
    description: "In which .obs slot to store the size factors (if any)."
    default:
    - "size_factors"
    required: false
    direction: "input"
    multiple: false
    multiple_sep: ":"
    dest: "par"
  resources:
  - type: "r_script"
    path: "script.R"
    is_executable: true
  description: "Normalize data using scran pooling"
  test_resources:
  - type: "python_script"
    text: "import anndata as ad\nimport subprocess\nfrom os import path\n\ninput_path\
      \ = meta[\"resources_dir\"] + \"/pancreas/dataset.h5ad\"\noutput_path = \"output.h5ad\"\
      \noutput_layer = \"norm_layer\"\n\ncmd = [\n  meta['executable'],\n  \"--input\"\
      , input_path,\n  \"--output\", output_path,\n  \"--layer_output\", output_layer\n\
      ]\n\nprint(\">> Running script as test\")\nout = subprocess.check_output(cmd).decode(\"\
      utf-8\")\n\nprint(\">> Checking whether output file exists\")\nassert path.exists(output_path)\n\
      \nprint(\">> Reading h5ad files\")\ninput = ad.read_h5ad(input_path)\noutput\
      \ = ad.read_h5ad(output_path)\nprint(\"input:\", input)\nprint(\"output:\",\
      \ output)\n\nprint(\">> Checking whether output data structures were added\"\
      )\nassert output_layer in output.layers\n\nprint(\"Checking whether data from\
      \ input was copied properly to output\")\nassert input.n_obs == output.n_obs\n\
      assert input.uns[\"dataset_id\"] == output.uns[\"dataset_id\"]\n\nprint(\"All\
      \ checks succeeded!\")\n"
    dest: "generic_test.py"
    is_executable: true
  - type: "file"
    path: "resources_test/common/pancreas"
  status: "enabled"
  set_wd_to_resources_dir: false
platforms:
- type: "docker"
  id: "docker"
  image: "eddelbuettel/r2u@sha256:1d3a92aab5abad11787cd6b6c9479960db9f4e56dcc7f837768da2e3f3c4dfe2"
  target_organization: "openproblems-bio"
  target_registry: "ghcr.io"
  namespace_separator: "/"
  resolve_volume: "Automatic"
  chown: true
  setup_strategy: "ifneedbepullelsecachedbuild"
  target_image_source: "https://github.com/openproblems-bio/openproblems-v2"
  setup:
  - type: "r"
    cran:
    - "Matrix"
    - "rlang"
    - "anndata"
    - "bit64"
    - "scran"
    - "BiocParallel"
    bioc_force_install: false
  - type: "apt"
    packages:
    - "libhdf5-dev"
    - "libgeos-dev"
    - "python3"
    - "python3-pip"
    - "python3-dev"
    - "python-is-python3"
    interactive: false
  - type: "python"
    user: false
    pip:
    - "anndata~=0.8.0"
    - "scanpy"
    upgrade: true
- type: "nextflow"
  id: "nextflow"
  variant: "vdsl3"
  directives:
    label:
    - "highmem"
    - "highcpu"
    tag: "$id"
  auto:
    simplifyInput: true
    simplifyOutput: true
    transcript: false
    publish: false
  debug: false
  container: "docker"
info:
  config: "/home/runner/work/openproblems-v2/openproblems-v2/src/datasets/normalization/log_scran_pooling/config.vsh.yaml"
  platform: "nextflow"
  output: "/home/runner/work/openproblems-v2/openproblems-v2/target/nextflow/datasets/normalization/log_scran_pooling"
  executable: "/home/runner/work/openproblems-v2/openproblems-v2/target/nextflow/datasets/normalization/log_scran_pooling/log_scran_pooling"
  viash_version: "0.7.3"
  git_commit: "70f2e77aa973a3952119ae89572e7b4197f13fff"
  git_remote: "https://github.com/openproblems-bio/openproblems-v2"
