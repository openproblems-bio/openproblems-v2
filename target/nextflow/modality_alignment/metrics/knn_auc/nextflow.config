  docker.enabled = true
  docker.runOptions = "-i -v ${baseDir}:${baseDir}"
  process.container = "dataintuitive/viash"
  params {
    knn_auc__input = "input.h5ad"
    knn_auc__output = "output.h5ad"
    knn_auc__proportion_neighbors = "0.1"
    knn_auc__n_svd = "100"
    id = ""
    testScript = "test.py"
    testResources = [ "test.py", "../../resources/sample_output.h5ad" ]
    knn_auc {
      name = "knn_auc"
      container = "modality_alignment/metrics_knn_auc"
      containerTag = "main_build"
      containerRegistry = "openpipeline"
      command = "knn_auc"
      tests {
        isDefined = true
        testScript = "test.py"
        testResources = [ "test.py", "../../resources/sample_output.h5ad" ]
      }
      arguments {
        input {
          name = "input"
          otype = "--"
          required = false
          type = "file"
          direction = "Input"
          multiple = false
          multiple_sep = ":"
          value = "${params.knn_auc__input}"
          dflt = "input.h5ad"
          description = "File to input h5ad containing: `ad.X`, `ad.obsm['aligned']`, `ad.obsm['mode2_aligned']`"
        }
        output {
          name = "output"
          otype = "--"
          required = false
          type = "file"
          direction = "Output"
          multiple = false
          multiple_sep = ":"
          value = "${params.knn_auc__output}"
          dflt = "output.h5ad"
          description = "Output h5ad file containing `ad.uns['metric_value']`"
        }
        proportion_neighbors {
          name = "proportion_neighbors"
          otype = "--"
          required = false
          type = "double"
          direction = "Input"
          multiple = false
          multiple_sep = ":"
          value = "${params.knn_auc__proportion_neighbors}"
          dflt = "0.1"
          description = "The propotion of neighbours to use in computing the KNN."
        }
        n_svd {
          name = "n_svd"
          otype = "--"
          required = false
          type = "integer"
          direction = "Input"
          multiple = false
          multiple_sep = ":"
          value = "${params.knn_auc__n_svd}"
          dflt = "100"
          description = "The maximum number of SVDs to use."
        }
      }
    }
  }