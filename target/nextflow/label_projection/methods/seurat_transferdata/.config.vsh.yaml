functionality:
  name: "seurat_transferdata"
  namespace: "label_projection/methods"
  version: "main_build"
  arguments:
  - type: "file"
    name: "--input_train"
    description: "The training data"
    info:
      short_description: "Training data"
      slots:
        layers:
        - type: "integer"
          name: "counts"
          description: "Raw counts"
        - type: "double"
          name: "normalized"
          description: "Normalized counts"
        obs:
        - type: "string"
          name: "label"
          description: "Ground truth cell type labels"
        - type: "string"
          name: "batch"
          description: "Batch information"
        var:
        - type: "boolean"
          name: "hvg"
          description: "Whether or not the feature is considered to be a 'highly variable\
            \ gene'"
          required: true
        - type: "integer"
          name: "hvg_score"
          description: "A ranking of the features by hvg."
          required: true
        obsm:
        - type: "double"
          name: "X_pca"
          description: "The resulting PCA embedding."
          required: true
        uns:
        - type: "string"
          name: "dataset_id"
          description: "A unique identifier for the dataset"
          required: true
        - type: "string"
          name: "normalization_id"
          description: "Which normalization was used"
          required: true
    example:
    - "resources_test/label_projection/pancreas/train.h5ad"
    must_exist: true
    create_parent: true
    required: false
    direction: "input"
    multiple: false
    multiple_sep: ":"
    dest: "par"
  - type: "file"
    name: "--input_test"
    description: "The test data (without labels)"
    info:
      short_description: "Test data"
      slots:
        layers:
        - type: "integer"
          name: "counts"
          description: "Raw counts"
        - type: "double"
          name: "normalized"
          description: "Normalized counts"
        obs:
        - type: "string"
          name: "batch"
          description: "Batch information"
        var:
        - type: "boolean"
          name: "hvg"
          description: "Whether or not the feature is considered to be a 'highly variable\
            \ gene'"
          required: true
        - type: "integer"
          name: "hvg_score"
          description: "A ranking of the features by hvg."
          required: true
        obsm:
        - type: "double"
          name: "X_pca"
          description: "The resulting PCA embedding."
          required: true
        uns:
        - type: "string"
          name: "dataset_id"
          description: "A unique identifier for the dataset"
          required: true
        - type: "string"
          name: "normalization_id"
          description: "Which normalization was used"
          required: true
    example:
    - "resources_test/label_projection/pancreas/test.h5ad"
    must_exist: true
    create_parent: true
    required: false
    direction: "input"
    multiple: false
    multiple_sep: ":"
    dest: "par"
  - type: "file"
    name: "--output"
    description: "The prediction file"
    info:
      short_description: "Prediction"
      slots:
        obs:
        - type: "string"
          name: "label_pred"
          description: "Predicted labels for the test cells."
        uns:
        - type: "string"
          name: "dataset_id"
          description: "A unique identifier for the dataset"
          required: true
        - type: "string"
          name: "normalization_id"
          description: "Which normalization was used"
          required: true
        - type: "string"
          name: "method_id"
          description: "A unique identifier for the method"
    example:
    - "resources_test/label_projection/pancreas/knn.h5ad"
    must_exist: true
    create_parent: true
    required: false
    direction: "output"
    multiple: false
    multiple_sep: ":"
    dest: "par"
  resources:
  - type: "r_script"
    path: "script.R"
    is_executable: true
  description: "The Seurat v3 anchoring procedure is designed to integrate\ndiverse\
    \ single-cell datasets across technologies and modalities. \n"
  test_resources:
  - type: "file"
    path: "resources_test/label_projection/pancreas"
    dest: "resources_test/label_projection/pancreas"
  - type: "python_script"
    path: "src/common/comp_tests/check_method_config.py"
    is_executable: true
  - type: "python_script"
    path: "src/common/comp_tests/run_and_check_adata.py"
    is_executable: true
  info:
    pretty_name: "Seurat TransferData"
    summary: "Seurat reference mapping predicts cell types for unlabelled cells using\
      \ PCA distances, labelled anchors, and transfer anchors from Seurat, with SCTransform\
      \ normalization."
    description: "\"Seurat reference mapping is a cell type label transfer method\
      \ provided by the\nSeurat package. Gene expression counts are first normalised\
      \ by SCTransform\nbefore computing PCA. Then it finds mutual nearest neighbours,\
      \ known as\ntransfer anchors, between the labelled and unlabelled part of the\
      \ data in PCA\nspace, and computes each cellâ€™s distance to each of the anchor\
      \ pairs.\nFinally, it uses the labelled anchors to predict cell types for unlabelled\n\
      cells based on these distances.\"\n"
    reference: "hao2021integrated"
    repository_url: "https://github.com/satijalab/seurat"
    documentation_url: "https://satijalab.org/seurat/articles/integration_mapping.html"
    v1_url: "openproblems/tasks/label_projection/methods/seurat.py"
    v1_commit: "3f19f0e87a8bc8b59c7521ba01917580aff81bc8"
    preferred_normalization: "log_cpm"
    variants:
      seurat: null
    type: "method"
  status: "enabled"
  set_wd_to_resources_dir: false
platforms:
- type: "docker"
  id: "docker"
  image: "eddelbuettel/r2u:22.04"
  target_organization: "openproblems-bio"
  target_registry: "ghcr.io"
  namespace_separator: "/"
  resolve_volume: "Automatic"
  chown: true
  setup_strategy: "ifneedbepullelsecachedbuild"
  target_image_source: "https://github.com/openproblems-bio/openproblems-v2"
  setup:
  - type: "r"
    cran:
    - "Matrix"
    - "Seurat"
    - "rlang"
    - "anndata"
    - "bit64"
    bioc_force_install: false
  - type: "apt"
    packages:
    - "libhdf5-dev"
    - "libgeos-dev"
    - "python3"
    - "python3-pip"
    - "python3-dev"
    - "python-is-python3"
    interactive: false
  - type: "python"
    user: false
    pip:
    - "anndata~=0.8.0"
    - "pyyaml"
    upgrade: true
- type: "nextflow"
  id: "nextflow"
  variant: "vdsl3"
  directives:
    label:
    - "highmem"
    - "highcpu"
    tag: "$id"
  auto:
    simplifyInput: true
    simplifyOutput: true
    transcript: false
    publish: false
  debug: false
  container: "docker"
info:
  config: "/home/runner/work/openproblems-v2/openproblems-v2/src/label_projection/methods/seurat_transferdata/config.vsh.yaml"
  platform: "nextflow"
  output: "/home/runner/work/openproblems-v2/openproblems-v2/target/nextflow/label_projection/methods/seurat_transferdata"
  executable: "/home/runner/work/openproblems-v2/openproblems-v2/target/nextflow/label_projection/methods/seurat_transferdata/seurat_transferdata"
  viash_version: "0.7.3"
  git_commit: "815f69faf5a1e23c36fa6a5b5ee1d0c1a59edf41"
  git_remote: "https://github.com/openproblems-bio/openproblems-v2"
