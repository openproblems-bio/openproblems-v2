functionality:
  name: "split_dataset"
  namespace: "denoising"
  version: "main_build"
  authors: []
  inputs: []
  outputs: []
  arguments:
  - type: "file"
    name: "--input"
    alternatives: []
    description: "A preprocessed dataset"
    info:
      short_description: "Preprocessed dataset"
      slots:
        layers:
        - type: "integer"
          name: "counts"
          description: "Raw counts"
        uns:
        - type: "string"
          name: "dataset_id"
          description: "A unique identifier for the dataset"
    example:
    - "preprocessed.h5ad"
    default: []
    must_exist: true
    create_parent: true
    required: false
    direction: "input"
    multiple: false
    multiple_sep: ":"
    dest: "par"
  - type: "file"
    name: "--output_train"
    alternatives: []
    description: "The training data"
    info:
      short_description: "Training data"
      slots:
        layers:
        - type: "integer"
          name: "counts"
          description: "Raw counts"
        obs:
        - type: "string"
          name: "n_counts"
          description: "Raw counts"
        uns:
        - type: "string"
          name: "dataset_id"
          description: "A unique identifier for the dataset"
    example:
    - "training.h5ad"
    default: []
    must_exist: true
    create_parent: true
    required: false
    direction: "output"
    multiple: false
    multiple_sep: ":"
    dest: "par"
  - type: "file"
    name: "--output_test"
    alternatives: []
    description: "The test data"
    info:
      short_description: "Test data"
      slots:
        layers:
        - type: "integer"
          name: "counts"
          description: "Raw counts"
        obs:
        - type: "string"
          name: "n_counts"
          description: "Raw counts"
        uns:
        - type: "string"
          name: "dataset_id"
          description: "A unique identifier for the dataset"
    example:
    - "test.h5ad"
    default: []
    must_exist: true
    create_parent: true
    required: false
    direction: "output"
    multiple: false
    multiple_sep: ":"
    dest: "par"
  - type: "string"
    name: "--method"
    alternatives: []
    description: "The process method to assign train/test."
    example: []
    default:
    - "mcv"
    required: false
    choices:
    - "mcv"
    direction: "input"
    multiple: false
    multiple_sep: ":"
    dest: "par"
  - type: "double"
    name: "--train_frac"
    alternatives: []
    description: "The fraction the molecules need to be split to train dataset"
    example: []
    default:
    - 0.9
    required: false
    direction: "input"
    multiple: false
    multiple_sep: ":"
    dest: "par"
  - type: "integer"
    name: "--seed"
    alternatives: []
    description: "A seed for the subsampling."
    example:
    - 123
    default: []
    required: false
    choices: []
    direction: "input"
    multiple: false
    multiple_sep: ":"
    dest: "par"
  argument_groups: []
  resources:
  - type: "python_script"
    path: "script.py"
    is_executable: true
  description: "Splits molecules into two (potentially overlapping) groups using a\
    \ fraction ratio."
  test_resources:
  - type: "file"
    path: "../../../resources_test/common/pancreas"
  - type: "python_script"
    text: "import anndata as ad\nimport subprocess\nfrom os import path\n\ninput_path\
      \ = meta[\"resources_dir\"] + \"/pancreas/dataset.h5ad\"\noutput_train_path\
      \ = \"output_train.h5ad\"\noutput_test_path = \"output_test.h5ad\"\n\ncmd =\
      \ [\n    meta['executable'],\n    \"--input\", input_path,\n    \"--output_train\"\
      , output_train_path,\n    \"--output_test\", output_test_path,\n]\n\nprint(\"\
      >> Running script as test\")\nout = subprocess.run(cmd, check=True, capture_output=True,\
      \ text=True)\n\nprint(\">> Checking whether output file exists\")\nassert path.exists(output_train_path)\n\
      assert path.exists(output_test_path)\n\nprint(\">> Reading h5ad files\")\ninput\
      \ = ad.read_h5ad(input_path)\noutput_train = ad.read_h5ad(output_train_path)\n\
      output_test = ad.read_h5ad(output_test_path)\n\nprint(\"input:\", input)\nprint(\"\
      output_train:\", output_train)\nprint(\"output_test:\", output_test)\n\nprint(\"\
      >> Checking whether data from input was copied properly to output\")\nassert\
      \ output_train.uns[\"dataset_id\"] == input.uns[\"dataset_id\"]\nassert output_test.uns[\"\
      dataset_id\"] == input.uns[\"dataset_id\"]\n\nprint(\">> Check whether certain\
      \ slots exist\")\nassert \"counts\" in output_train.layers\nassert \"counts\"\
      \ in output_test.layers\n\nprint(\">> All checks succeeded!\")"
    dest: "./script.py"
    is_executable: true
  status: "enabled"
  requirements:
    commands: []
  set_wd_to_resources_dir: false
platforms:
- type: "docker"
  id: "docker"
  image: "python:3.10"
  target_organization: "openproblems-bio"
  target_registry: "ghcr.io"
  namespace_separator: "_"
  resolve_volume: "Automatic"
  chown: true
  port: []
  setup_strategy: "ifneedbepullelsecachedbuild"
  run_args: []
  target_image_source: "https://github.com/openproblems-bio/openproblems-v2"
  setup:
  - type: "python"
    user: false
    packages:
    - "anndata>=0.8"
    - "numpy"
    - "scipy"
    pip: []
    pypi: []
    git: []
    github:
    - "czbiohub/molecular-cross-validation"
    gitlab: []
    mercurial: []
    svn: []
    bazaar: []
    url: []
    script: []
    upgrade: true
  test_setup: []
- type: "nextflow"
  id: "nextflow"
  variant: "vdsl3"
  directives:
    accelerator: {}
    conda: []
    containerOptions: []
    label: []
    module: []
    pod: []
    publishDir: []
    queue: []
    tag: "$id"
  auto:
    simplifyInput: true
    simplifyOutput: true
    transcript: false
    publish: false
  debug: false
  container: "docker"
info:
  config: "/home/runner/work/openproblems-v2/openproblems-v2/src/denoising/split_dataset/config.vsh.yaml"
  platform: "nextflow"
  output: "/home/runner/work/openproblems-v2/openproblems-v2/target/nextflow/denoising/split_dataset"
  executable: "/home/runner/work/openproblems-v2/openproblems-v2/target/nextflow/denoising/split_dataset/split_dataset"
  viash_version: "0.6.5"
  git_commit: "420dde5d5ee1148b7ea17fa7738f2d3120944ae6"
  git_remote: "https://github.com/openproblems-bio/openproblems-v2"
