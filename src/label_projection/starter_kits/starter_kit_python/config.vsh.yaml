functionality:
  # component name
  name: python_starter_kit
  namespace: predict_modality_starter_kits

  # metadata for your component
  version: dev
  description: A description for your component.
  authors:
    - name: John Doe
      email: johndoe@youremailprovider.com
      roles: [ author, maintainer ]
      props: { github: johndoe, orcid: "0000-1111-2222-3333" }

  # parameters
  arguments:
    # input data to run the component
    - name: "--input"
      type: "file"
      example: "input_data.h5ad"
      description: Normalized Anndata.
      required: true
    # output path for the result data
    - name: "--output"
      type: "file"
      direction: "output"
      example: "output_data.h5ad"
      description: Dataset with resulting component values.
      required: true
    # parameters that may be used in the component
    - name: "--max_iter"
      type: "integer"
      default: "100"
      description: Maximum number of interations.
      # for obligatory parameters
      required: true
    - name: "--not_required"
      type: "string"
      example: "foo"
      description: A parameter that is not required by the component but can be used when passed.

  # files your script needs
  resources:
    - type: python_script
      path: script.py

  # resources for unit testing your component
  tests:
    - type: python_script
      path: test.py
    - path: sample_data

# target platforms
platforms:

  # By specifying 'docker' platform, viash will build a standalone
  # executable which uses docker in the back end to run your method.
  - type: docker
    # you need to specify a base image that contains python
    image: "python:3.8"
    # You can specify additional dependencies with 'setup'.
    # See https://viash.io/docs/reference_config/platform-docker/#setup-list
    # for more information on how to add more dependencies.
    setup:
      - type: python
        packages:
          - scikit-learn
          - anndata
          - scanpy

  # By specifying a 'nextflow', viash will also build a viash module
  # which uses the docker container built above to also be able to
  # run your method as part of a nextflow pipeline.
  - type: nextflow

  # generate an executable to run locally in your machine
  - type: native
