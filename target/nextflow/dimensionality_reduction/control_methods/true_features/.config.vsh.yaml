functionality:
  name: "true_features"
  namespace: "dimensionality_reduction/control_methods"
  version: "main_build"
  authors: []
  inputs: []
  outputs: []
  arguments:
  - type: "file"
    name: "--input"
    alternatives: []
    description: "A normalized data with a PCA embedding and HVG selection"
    info:
      short_description: "Dataset+PCA+HVG"
      slots:
        layers:
        - type: "integer"
          name: "counts"
          description: "Raw counts"
          required: true
        - type: "double"
          name: "normalized"
          description: "Normalized expression values"
        obs:
        - type: "string"
          name: "celltype"
          description: "Cell type information"
          required: false
        - type: "string"
          name: "batch"
          description: "Batch information"
          required: false
        - type: "string"
          name: "tissue"
          description: "Tissue information"
          required: false
        - type: "double"
          name: "size_factors"
          description: "The size factors created by the normalization method, if any."
          required: false
        var:
        - type: "boolean"
          name: "hvg"
          description: "Whether or not the feature is considered to be a 'highly variable\
            \ gene'"
          required: true
        - type: "double"
          name: "hvg_score"
          description: "High variability gene score (normalized dispersion). The greater,\
            \ the more variable."
          required: true
        obsm:
        - type: "double"
          name: "X_pca"
          description: "The resulting PCA embedding."
          required: true
        varm:
        - type: "double"
          name: "pca_loadings"
          description: "The PCA loadings matrix."
          required: true
        uns:
        - type: "string"
          name: "dataset_id"
          description: "A unique identifier for the dataset"
          required: true
        - type: "string"
          name: "normalization_id"
          description: "Which normalization was used"
          required: true
        - type: "double"
          name: "pca_variance"
          description: "The PCA variance objects."
          required: true
    example:
    - "dataset.h5ad"
    default: []
    must_exist: true
    create_parent: true
    required: false
    direction: "input"
    multiple: false
    multiple_sep: ":"
    dest: "par"
  - type: "file"
    name: "--output"
    alternatives: []
    description: "A dimensionally reduced dataset"
    info:
      short_description: "Training data"
      slots:
        obsm:
        - type: "double"
          name: "X_emb"
          description: "The dimensionally reduced embedding."
        uns:
        - type: "string"
          name: "dataset_id"
          description: "A unique identifier for the dataset"
        - type: "string"
          name: "method_id"
          description: "A unique identifier for the method"
        - type: "string"
          name: "normalization_id"
          description: "Which normalization was used"
          required: true
    example:
    - "reduced.h5ad"
    default: []
    must_exist: true
    create_parent: true
    required: false
    direction: "output"
    multiple: false
    multiple_sep: ":"
    dest: "par"
  - type: "boolean"
    name: "--use_normalized_layer"
    alternatives: []
    description: "Whether to work with the raw counts or the normalized counts."
    example: []
    default:
    - false
    required: false
    direction: "input"
    multiple: false
    multiple_sep: ":"
    dest: "par"
  - type: "integer"
    name: "--n_hvg"
    alternatives: []
    description: "Number of highly variable genes to subset to. If not specified,\
      \ the input matrix will not be subset."
    example: []
    default:
    - 1000
    required: false
    choices: []
    direction: "input"
    multiple: false
    multiple_sep: ":"
    dest: "par"
  argument_groups: []
  resources:
  - type: "python_script"
    path: "script.py"
    is_executable: true
  description: "Positive control method which generates high-dimensional (full data)\
    \ embedding"
  test_resources:
  - type: "file"
    path: "../../../../resources_test/dimensionality_reduction/pancreas/"
  - type: "python_script"
    text: "import anndata as ad\nimport subprocess\nfrom os import path\n\ninput_path\
      \ = meta[\"resources_dir\"] + \"/pancreas/train.h5ad\"\noutput_path = \"reduced.h5ad\"\
      \nn_pca = 50\ncmd = [\n    meta['executable'],\n    \"--input\", input_path,\n\
      \    \"--output\", output_path,\n    \"--n_pca\", str(n_pca)\n]\n\nprint(\"\
      >> Checking whether input file exists\", flush=True)\nassert path.exists(input_path)\n\
      \nprint(\">> Running script as test\", flush=True)\nout = subprocess.run(cmd)\n\
      # out = subprocess.run(cmd, check=True, capture_output=True, text=True)\n\n\
      print(\">> Checking whether output file exists\", flush=True)\nassert path.exists(output_path)\n\
      \nprint(\">> Reading h5ad files\", flush=True)\ninput = ad.read_h5ad(input_path)\n\
      output = ad.read_h5ad(output_path)\n\nprint(\"input:\", input, flush=True)\n\
      print(\"output:\", output, flush=True)\n\nprint(\">> Checking whether predictions\
      \ were added\", flush=True)\nassert \"X_emb\" in output.obsm\nassert meta['functionality_name']\
      \ == output.uns[\"method_id\"]\n\nprint(\">> Checking whether data from input\
      \ was copied properly to output\", flush=True)\nassert input.n_obs == output.n_obs\n\
      assert input.uns[\"dataset_id\"] == output.uns[\"dataset_id\"]\n\nprint(\"All\
      \ checks succeeded!\", flush=True)"
    dest: "generic_test.py"
    is_executable: true
  info:
    type: "positive_control"
    label: "True Features"
    v1_url: "openproblems/tasks/dimensionality_reduction/methods/baseline.py"
    v1_comp_id: "True Features"
    v1_commit: "4a0ee9b3731ff10d8cd2e584726a61b502aef613"
    preferred_normalization: "counts"
    variants:
      true_features_log_cpm:
        preferred_normalization: "log_cpm"
        use_normalized_layer: true
      true_features_log_cpm_hvg:
        preferred_normalization: "log_cpm"
        use_normalized_layer: true
        n_hvg: 1000
  status: "enabled"
  requirements:
    commands: []
  set_wd_to_resources_dir: false
platforms:
- type: "docker"
  id: "docker"
  image: "python:3.10"
  target_organization: "openproblems-bio"
  target_registry: "ghcr.io"
  namespace_separator: "_"
  resolve_volume: "Automatic"
  chown: true
  port: []
  setup_strategy: "ifneedbepullelsecachedbuild"
  run_args: []
  target_image_source: "https://github.com/openproblems-bio/openproblems-v2"
  setup:
  - type: "python"
    user: false
    packages:
    - "scanpy"
    - "anndata>=0.8"
    pip: []
    pypi: []
    git: []
    github: []
    gitlab: []
    mercurial: []
    svn: []
    bazaar: []
    url: []
    script: []
    upgrade: true
  test_setup: []
- type: "nextflow"
  id: "nextflow"
  variant: "vdsl3"
  directives:
    accelerator: {}
    conda: []
    containerOptions: []
    label:
    - "highmem"
    - "highcpu"
    module: []
    pod: []
    publishDir: []
    queue: []
    tag: "$id"
  auto:
    simplifyInput: true
    simplifyOutput: true
    transcript: false
    publish: false
  debug: false
  container: "docker"
info:
  config: "/home/runner/work/openproblems-v2/openproblems-v2/src/dimensionality_reduction/control_methods/true_features/config.vsh.yaml"
  platform: "nextflow"
  output: "/home/runner/work/openproblems-v2/openproblems-v2/target/nextflow/dimensionality_reduction/control_methods/true_features"
  executable: "/home/runner/work/openproblems-v2/openproblems-v2/target/nextflow/dimensionality_reduction/control_methods/true_features/true_features"
  viash_version: "0.6.7"
  git_commit: "b7f6ce801b139ff93f2b712803ed9ff2c89c5786"
  git_remote: "https://github.com/openproblems-bio/openproblems-v2"
