functionality:
  name: "rmse"
  namespace: "dimensionality_reduction/metrics"
  version: "main_build"
  authors: []
  inputs: []
  outputs: []
  arguments:
  - type: "file"
    name: "--input_reduced"
    alternatives: []
    description: "A dimensionally reduced dataset"
    info:
      short_description: "Training data"
      slots:
        obsm:
        - type: "double"
          name: "X_emb"
          description: "The dimensionally reduced embedding."
        uns:
        - type: "string"
          name: "dataset_id"
          description: "A unique identifier for the dataset"
        - type: "string"
          name: "method_id"
          description: "A unique identifier for the method"
        - type: "string"
          name: "normalization_id"
          description: "Which normalization was used"
          required: true
    example:
    - "reduced.h5ad"
    default: []
    must_exist: true
    create_parent: true
    required: false
    direction: "input"
    multiple: false
    multiple_sep: ":"
    dest: "par"
  - type: "file"
    name: "--input_test"
    alternatives: []
    description: "The test data"
    info:
      short_description: "Test data"
      slots:
        layers:
        - type: "integer"
          name: "counts"
          description: "Raw counts"
          required: true
        - type: "double"
          name: "normalized"
          description: "Normalized expression values"
          required: true
        var:
        - type: "double"
          name: "hvg_score"
          description: "High variability gene score (normalized dispersion). The greater,\
            \ the more variable."
          required: true
        uns:
        - type: "string"
          name: "dataset_id"
          description: "A unique identifier for the dataset"
          required: true
    example:
    - "test.h5ad"
    default: []
    must_exist: true
    create_parent: true
    required: false
    direction: "input"
    multiple: false
    multiple_sep: ":"
    dest: "par"
  - type: "file"
    name: "--output"
    alternatives: []
    description: "Metric score file"
    info:
      short_description: "Score"
      slots:
        uns:
        - type: "string"
          name: "dataset_id"
          description: "A unique identifier for the dataset"
          required: true
        - type: "string"
          name: "normalization_id"
          description: "Which normalization was used"
          required: true
        - type: "string"
          name: "method_id"
          description: "A unique identifier for the method"
          required: true
        - type: "string"
          name: "metric_ids"
          description: "One or more unique metric identifiers"
          multiple: true
          required: true
        - type: "double"
          name: "metric_values"
          description: "The metric values obtained for the given prediction. Must\
            \ be of same length as 'metric_ids'."
          multiple: true
          required: true
    example:
    - "score.h5ad"
    default: []
    must_exist: true
    create_parent: true
    required: false
    direction: "output"
    multiple: false
    multiple_sep: ":"
    dest: "par"
  - type: "boolean_true"
    name: "--spectral"
    alternatives: []
    description: "Calculate the spectral root mean squared error."
    direction: "input"
    dest: "par"
  argument_groups: []
  resources:
  - type: "python_script"
    path: "script.py"
    is_executable: true
  description: "The root mean squared error between the full (or processed) data matrix\
    \ and a list of dimensionally-reduced matrices"
  test_resources:
  - type: "file"
    path: "../../../../resources_test/dimensionality_reduction/pancreas/"
  - type: "python_script"
    text: "import anndata as ad\nimport subprocess\nfrom os import path\n\ninput_reduced_path\
      \ = meta[\"resources_dir\"] + \"/pancreas/reduced.h5ad\"\ninput_test_path =\
      \ meta[\"resources_dir\"] + \"/pancreas/test.h5ad\"\noutput_path = \"score.h5ad\"\
      \ncmd = [\n    meta['executable'],\n    \"--input_reduced\", input_reduced_path,\n\
      \    \"--input_test\", input_test_path,\n    \"--output\", output_path,\n]\n\
      \nprint(\">> Checking whether input files exist\")\nassert path.exists(input_reduced_path)\n\
      assert path.exists(input_test_path)\n\nprint(\">> Running script as test\")\n\
      out = subprocess.run(cmd, check=True, capture_output=True, text=True)\n\nprint(\"\
      >> Checking whether output file exists\")\nassert path.exists(output_path)\n\
      \nprint(\">> Reading h5ad files\")\ninput_reduced = ad.read_h5ad(input_reduced_path)\n\
      input_test = ad.read_h5ad(input_test_path)\noutput = ad.read_h5ad(output_path)\n\
      \nprint(\"input reduced:\", input_reduced)\nprint(\"input test:\", input_test)\n\
      print(\"output:\", output)\n\nprint(\">> Checking whether metrics were added\"\
      )\nassert \"metric_ids\" in output.uns\nassert \"metric_values\" in output.uns\n\
      assert meta['functionality_name'] in output.uns[\"metric_ids\"]\n\nprint(\"\
      >> Checking whether data from input was copied properly to output\")\nassert\
      \ input_reduced.uns[\"dataset_id\"] == output.uns[\"dataset_id\"]\nassert input_reduced.uns[\"\
      normalization_id\"] == output.uns[\"normalization_id\"]\nassert input_reduced.uns[\"\
      method_id\"] == output.uns[\"method_id\"]\n\nprint(\"All checks succeeded!\"\
      )"
    dest: "generic_test.py"
    is_executable: true
  info:
    v1_url: "openproblems/tasks/dimensionality_reduction/metrics/root_mean_square_error.py"
    v1_commit: "b353a462f6ea353e0fc43d0f9fcbbe621edc3a0b"
    metrics:
    - id: "rmse"
      label: "RMSE"
      description: "The root mean squared error between the full (or processed) data\
        \ matrix and a list of dimensionally-reduced matrices"
      min: 0
  status: "enabled"
  requirements:
    commands: []
  set_wd_to_resources_dir: false
platforms:
- type: "docker"
  id: "docker"
  image: "python:3.10"
  target_organization: "openproblems-bio"
  target_registry: "ghcr.io"
  namespace_separator: "_"
  resolve_volume: "Automatic"
  chown: true
  port: []
  setup_strategy: "ifneedbepullelsecachedbuild"
  run_args: []
  target_image_source: "https://github.com/openproblems-bio/openproblems-v2"
  setup:
  - type: "python"
    user: false
    packages:
    - "umap-learn"
    - "scikit-learn"
    - "numpy"
    - "scipy"
    - "anndata>=0.8"
    pip: []
    pypi: []
    git: []
    github: []
    gitlab: []
    mercurial: []
    svn: []
    bazaar: []
    url: []
    script: []
    upgrade: true
  test_setup: []
- type: "nextflow"
  id: "nextflow"
  variant: "vdsl3"
  directives:
    accelerator: {}
    conda: []
    containerOptions: []
    label:
    - "midmem"
    - "midcpu"
    module: []
    pod: []
    publishDir: []
    queue: []
    tag: "$id"
  auto:
    simplifyInput: true
    simplifyOutput: true
    transcript: false
    publish: false
  debug: false
  container: "docker"
info:
  config: "/home/runner/work/openproblems-v2/openproblems-v2/src/dimensionality_reduction/metrics/rmse/config.vsh.yaml"
  platform: "nextflow"
  output: "/home/runner/work/openproblems-v2/openproblems-v2/target/nextflow/dimensionality_reduction/metrics/rmse"
  executable: "/home/runner/work/openproblems-v2/openproblems-v2/target/nextflow/dimensionality_reduction/metrics/rmse/rmse"
  viash_version: "0.6.6"
  git_commit: "929465574bd1ab2aa306994e98cf566c8f0a9791"
  git_remote: "https://github.com/openproblems-bio/openproblems-v2"
