import anndata as ad
import pandas as pd


## VIASH START
# The following code has been auto-generated by Viash.
par = {
  "input": "resources/datasets/multimodal/cite_BMMC_processed.h5ad",
  "mod1": "GEX",
  "mod2": "ATAC",
  "dataset_name": "BMMC (CITE-seq)",
  "dataset_url": "https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSE194122",
  "dataset_reference": "Neurips",
  "dataset_summary": "value",
  "dataset_description": "value",
  "dataset_organism": "homo_sapiens",
  "output_mod1": "output/mod1.h5ad",
  "output_mod2": "output/mod2.h5ad"
}
meta = {
  "functionality_name": "openproblems_neurips2021_bmmc",
  "resources_dir": "/tmp/viash_inject_openproblems_neurips2021_bmmc14365472827677740971", 
}

## VIASH END

print("load dataset file", flush=True)
adata= ad.read_h5ad(par["input"])

# make var names unique
adata.var_names_make_unique()

# Construct Modality datasets
print("Construct Mod datasets")
def extract_mod(adata, mod_name):
  
  adata_mod = ad.AnnData(
    X = adata.X,
    var={key.replace(f"{mod_name}_", ""): value for key, value in adata.var.items() if key.startswith(mod_name)},
    obs={key.replace(f"{mod_name}_", ""): value for key, value in adata.obs.items() if key.startswith(mod_name)},
    uns={key.replace(f"{mod_name}_", ""): value for key, value in adata.uns.items() if key.startswith(mod_name)},
    layers=adata.layers
  )

  if mod_name == "ATAC":
      adata_mod.obsm = {key.replace(f"{mod_name}_", ""): value for key, value in adata.obsm.items() if key.startswith(mod_name)}

  return adata_mod

adata_mod1= extract_mod(adata, par["mod1"])
adata_mod2= extract_mod(adata, par["mod2"])

# Add none mod specific data
mod_obs_data = {
    key: adata.obs[key]
    for key in adata.obs.keys()
    if not key.startswith(par['mod1']) and not key.startswith(par['mod2'])
}

for key, value in mod_obs_data.items():
    adata_mod1.obs[key] = value
    adata_mod2.obs[key] = value

mod_var_data = {
    key: adata.var[key]
    for key in adata.var.keys()
    if not key.startswith(par['mod1']) and not key.startswith(par['mod2'])
}

for key, value in mod_var_data.items():
    adata_mod1.var[key] = value
    adata_mod2.var[key] = value

mod_uns_data = {
    key: adata.uns[key]
    for key in adata.uns.keys()
    if not key.startswith(par['mod1']) and not key.startswith(par['mod2'])
}

for key, value in mod_uns_data.items():
    adata_mod1.uns[key] = value
    adata_mod2.uns[key] = value


del adata_mod1.X
del adata_mod2.X

print("Add metadata to uns", flush=True)
metadata_fields = [
    "dataset_id", "dataset_name", "dataset_url", "dataset_reference",
    "dataset_summary", "dataset_description", "dataset_organism"
]
for key in metadata_fields:
    if key in par:
        print(f"  Setting .uns['{key}']", flush=True)
        adata_mod1.uns[key] = par[key]
        adata_mod2.uns[key] = par[key]

print("Writing adata to file", flush=True)
print(adata_mod2)
adata_mod1.write_h5ad(par["output_mod1"], compression="gzip")
adata_mod2.write_h5ad(par["output_mod2"], compression="gzip")
