manifest {
  name = 'openproblems-bio/openproblems-v2'
  mainScript = 'main.nf'
  nextflowVersion = '!>=20.12.1-edge'
  description = 'OpenProblems benchmarking pipeline'
}

process.container = 'nextflow/bash:latest'

process {
  // Retry for exit codes that have something to do with memory issues
  errorStrategy = { task.exitStatus in 137..143 ? 'retry' : 'ignore' }
  maxRetries = 3
  maxMemory = null

  // Resource labels
  withLabel: lowcpu { cpus = 5 }
  withLabel: midcpu { cpus = 15 }
  withLabel: highcpu { cpus = 30 }
  
  withLabel: lowmem { memory = { get_memory( 20.GB * task.attempt ) } }
  withLabel: midmem { memory = { get_memory( 50.GB * task.attempt ) } }
  withLabel: highmem { memory = { get_memory( 100.GB * task.attempt ) } }
}

def get_memory(to_compare) {
  if (!process.containsKey("maxMemory") || !process.maxMemory) {
    return to_compare
  }

  try {
    if (process.containsKey("maxRetries") && process.maxRetries && task.attempt == (process.maxRetries as int)) {
      return process.maxMemory
    }
    else if (to_compare.compareTo(process.maxMemory as nextflow.util.MemoryUnit) == 1) {
      return max_memory as nextflow.util.MemoryUnit
    }
    else {
      return to_compare
    }  
  } catch (all) {
        println "Error processing memory resources. Please check that process.maxMemory '${process.maxMemory}' and process.maxRetries '${process.maxRetries}' are valid!"
        System.exit(1)
  }
}