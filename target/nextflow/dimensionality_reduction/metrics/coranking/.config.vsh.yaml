functionality:
  name: "coranking"
  namespace: "dimensionality_reduction/metrics"
  version: "main_build"
  authors: []
  inputs: []
  outputs: []
  arguments:
  - type: "file"
    name: "--input_reduced"
    alternatives: []
    description: "A dimensionally reduced dataset"
    info:
      short_description: "Training data"
      slots:
        obsm:
        - type: "double"
          name: "X_emb"
          description: "The dimensionally reduced embedding."
        uns:
        - type: "string"
          name: "dataset_id"
          description: "A unique identifier for the dataset"
        - type: "string"
          name: "method_id"
          description: "A unique identifier for the method"
        - type: "string"
          name: "normalization_id"
          description: "Which normalization was used"
          required: true
    example:
    - "reduced.h5ad"
    default: []
    must_exist: true
    create_parent: true
    required: false
    direction: "input"
    multiple: false
    multiple_sep: ":"
    dest: "par"
  - type: "file"
    name: "--input_test"
    alternatives: []
    description: "The test data"
    info:
      short_description: "Test data"
      slots:
        layers:
        - type: "integer"
          name: "counts"
          description: "Raw counts"
          required: true
        - type: "double"
          name: "normalized"
          description: "Normalized expression values"
          required: true
        var:
        - type: "double"
          name: "hvg_score"
          description: "High variability gene score (normalized dispersion). The greater,\
            \ the more variable."
          required: true
        uns:
        - type: "string"
          name: "dataset_id"
          description: "A unique identifier for the dataset"
          required: true
        - type: "string"
          name: "normalization_id"
          description: "Which normalization was used"
          required: true
    example:
    - "test.h5ad"
    default: []
    must_exist: true
    create_parent: true
    required: false
    direction: "input"
    multiple: false
    multiple_sep: ":"
    dest: "par"
  - type: "file"
    name: "--output"
    alternatives: []
    description: "Metric score file"
    info:
      short_description: "Score"
      slots:
        uns:
        - type: "string"
          name: "dataset_id"
          description: "A unique identifier for the dataset"
          required: true
        - type: "string"
          name: "normalization_id"
          description: "Which normalization was used"
          required: true
        - type: "string"
          name: "method_id"
          description: "A unique identifier for the method"
          required: true
        - type: "string"
          name: "metric_ids"
          description: "One or more unique metric identifiers"
          multiple: true
          required: true
        - type: "double"
          name: "metric_values"
          description: "The metric values obtained for the given prediction. Must\
            \ be of same length as 'metric_ids'."
          multiple: true
          required: true
    example:
    - "score.h5ad"
    default: []
    must_exist: true
    create_parent: true
    required: false
    direction: "output"
    multiple: false
    multiple_sep: ":"
    dest: "par"
  argument_groups: []
  resources:
  - type: "r_script"
    path: "script.R"
    is_executable: true
  description: "This is a set of metrics which all use a co-ranking matrix as the\
    \ basis of the metric.\n"
  test_resources:
  - type: "file"
    path: "../../../../resources_test/dimensionality_reduction/pancreas/"
  - type: "python_script"
    text: "import anndata as ad\nimport subprocess\nfrom os import path\n\ninput_reduced_path\
      \ = meta[\"resources_dir\"] + \"/pancreas/reduced.h5ad\"\ninput_test_path =\
      \ meta[\"resources_dir\"] + \"/pancreas/test.h5ad\"\noutput_path = \"score.h5ad\"\
      \ncmd = [\n    meta['executable'],\n    \"--input_reduced\", input_reduced_path,\n\
      \    \"--input_test\", input_test_path,\n    \"--output\", output_path,\n]\n\
      \nprint(\">> Checking whether input files exist\", flush=True)\nassert path.exists(input_reduced_path)\n\
      assert path.exists(input_test_path)\n\nprint(\">> Running script as test\",\
      \ flush=True)\nsubprocess.run(cmd, check=True)\n\nprint(\">> Checking whether\
      \ output file exists\", flush=True)\nassert path.exists(output_path)\n\nprint(\"\
      >> Reading h5ad files\", flush=True)\ninput_reduced = ad.read_h5ad(input_reduced_path)\n\
      input_test = ad.read_h5ad(input_test_path)\noutput = ad.read_h5ad(output_path)\n\
      \nprint(\"input reduced:\", input_reduced, flush=True)\nprint(\"input test:\"\
      , input_test, flush=True)\nprint(\"output:\", output, flush=True)\n\nprint(\"\
      >> Checking whether metrics were added\", flush=True)\nassert \"metric_ids\"\
      \ in output.uns\nassert \"metric_values\" in output.uns\n# assert meta['functionality_name']\
      \ in output.uns[\"metric_ids\"]\n# todo: look at config to check whether all\
      \ metric ids are available\n\nprint(\">> Checking whether data from input was\
      \ copied properly to output\", flush=True)\nassert input_reduced.uns[\"dataset_id\"\
      ] == output.uns[\"dataset_id\"]\nassert input_reduced.uns[\"normalization_id\"\
      ] == output.uns[\"normalization_id\"]\nassert input_reduced.uns[\"method_id\"\
      ] == output.uns[\"method_id\"]\n\nprint(\"All checks succeeded!\", flush=True)"
    dest: "generic_test.py"
    is_executable: true
  info:
    v1_url: "openproblems/tasks/dimensionality_reduction/metrics/nn_ranking.py"
    v1_commit: "14d70b330cae09527a6d4c4e552db240601e31cf"
    v1_note: "The original v1 implementations consisted of a lot of helper functions\
      \ which were \nderived from the pyDRMetrics package. This version uses the coRanking\
      \ package\nto avoid reimplementing and potentially introducing a lot of bugs\
      \ in how\nthe various metrics are computed.\n\nIn addition, the references for\
      \ each of the metrics were looked up to\nproperly attribute the original authors\
      \ of each of the metrics.\n"
    paper_reference: "kraemer2018dimred"
    metrics:
    - metric_id: "continuity_at_k30"
      metric_name: "Continuity at k=30"
      paper_reference: "venna2006local"
      min: 0
      max: 1
      maximize: true
    - metric_id: "trustworthiness_at_k30"
      metric_name: "Trustworthiness at k=30"
      paper_reference: "venna2006local"
      min: 0
      max: 1
      maximize: true
    - metric_id: "qnx_at_k30"
      metric_name: "The value for QNX at k=30"
      paper_reference: "lee2009quality"
      min: 0
      max: 1
      maximize: true
    - metric_id: "lcmc_at_k30"
      metric_name: "The value for LCMC at k=30"
      paper_reference: "chen2009local"
      min: 0
      max: 1
      maximize: true
    - metric_id: "qnx_auc"
      metric_name: "Area under the QNX curve"
      paper_reference: "lueks2011evaluate"
      min: 0
      max: 1
      maximize: true
    - metric_id: "qlocal"
      metric_name: "Local quality measure"
      paper_reference: "lueks2011evaluate"
      min: 0
      max: 1
      maximize: true
    - metric_id: "qglobal"
      metric_name: "Global quality measure"
      paper_reference: "lueks2011evaluate"
      min: 0
      max: 1
      maximize: true
  status: "enabled"
  requirements:
    commands: []
  set_wd_to_resources_dir: false
platforms:
- type: "docker"
  id: "docker"
  image: "eddelbuettel/r2u:22.04"
  target_organization: "openproblems-bio"
  target_registry: "ghcr.io"
  namespace_separator: "_"
  resolve_volume: "Automatic"
  chown: true
  port: []
  setup_strategy: "ifneedbepullelsecachedbuild"
  run_args: []
  target_image_source: "https://github.com/openproblems-bio/openproblems-v2"
  setup:
  - type: "r"
    packages: []
    cran:
    - "anndata"
    - "coRanking"
    - "bit64"
    bioc: []
    git: []
    github: []
    gitlab: []
    bitbucket: []
    svn: []
    url: []
    script: []
    bioc_force_install: false
  - type: "apt"
    packages:
    - "libhdf5-dev"
    - "libgeos-dev"
    - "python3"
    - "python3-pip"
    - "python3-dev"
    - "python-is-python3"
    interactive: false
  - type: "python"
    user: false
    packages: []
    pip:
    - "anndata>=0.8"
    pypi: []
    git: []
    github: []
    gitlab: []
    mercurial: []
    svn: []
    bazaar: []
    url: []
    script: []
    upgrade: true
  test_setup: []
- type: "nextflow"
  id: "nextflow"
  variant: "vdsl3"
  directives:
    accelerator: {}
    conda: []
    containerOptions: []
    label:
    - "highmem"
    - "midcpu"
    module: []
    pod: []
    publishDir: []
    queue: []
    tag: "$id"
  auto:
    simplifyInput: true
    simplifyOutput: true
    transcript: false
    publish: false
  debug: false
  container: "docker"
info:
  config: "/home/runner/work/openproblems-v2/openproblems-v2/src/dimensionality_reduction/metrics/coranking/config.vsh.yaml"
  platform: "nextflow"
  output: "/home/runner/work/openproblems-v2/openproblems-v2/target/nextflow/dimensionality_reduction/metrics/coranking"
  executable: "/home/runner/work/openproblems-v2/openproblems-v2/target/nextflow/dimensionality_reduction/metrics/coranking/coranking"
  viash_version: "0.6.7"
  git_commit: "67230c4a82ca2f86a4910008224ce0be93c07549"
  git_remote: "https://github.com/openproblems-bio/openproblems-v2"
