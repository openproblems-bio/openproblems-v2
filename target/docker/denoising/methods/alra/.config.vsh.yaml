functionality:
  name: "alra"
  namespace: "denoising/methods"
  version: "main_build"
  arguments:
  - type: "file"
    name: "--input_train"
    description: "The training data"
    info:
      short_description: "Training data"
      slots:
        layers:
        - type: "integer"
          name: "counts"
          description: "Raw counts"
        uns:
        - type: "string"
          name: "dataset_id"
          description: "A unique identifier for the dataset"
    example:
    - "resources_test/denoising/pancreas/train.h5ad"
    must_exist: true
    create_parent: true
    required: false
    direction: "input"
    multiple: false
    multiple_sep: ":"
    dest: "par"
  - type: "file"
    name: "--output"
    description: "The denoised data"
    info:
      short_description: "Denoised data"
      slots:
        layers:
        - type: "integer"
          name: "counts"
          description: "Raw counts"
        - type: "integer"
          name: "denoised"
          description: "denoised data"
        uns:
        - type: "string"
          name: "dataset_id"
          description: "A unique identifier for the dataset"
        - type: "string"
          name: "method_id"
          description: "A unique identifier for the method"
    example:
    - "resources_test/denoising/pancreas/magic.h5ad"
    must_exist: true
    create_parent: true
    required: false
    direction: "output"
    multiple: false
    multiple_sep: ":"
    dest: "par"
  - type: "integer"
    name: "--epochs"
    description: "Number of total epochs in training"
    default:
    - 300
    required: false
    direction: "input"
    multiple: false
    multiple_sep: ":"
    dest: "par"
  resources:
  - type: "r_script"
    path: "script.R"
    is_executable: true
  test_resources:
  - type: "python_script"
    path: "src/common/comp_tests/check_method_config.py"
    is_executable: true
  - type: "python_script"
    path: "src/common/comp_tests/run_and_check_adata.py"
    is_executable: true
  - type: "file"
    path: "resources_test/denoising/pancreas"
    dest: "resources_test/denoising/pancreas"
  info:
    pretty_name: "ALRA"
    summary: "ALRA imputes missing values in scRNA-seq data by computing rank-k approximation,\
      \ thresholding by gene, and rescaling the matrix."
    description: "\"Adaptively-thresholded Low Rank Approximation (ALRA). \n\nALRA\
      \ is a method for imputation of missing values in single cell RNA-sequencing\
      \ data, \ndescribed in the preprint, \"Zero-preserving imputation of scRNA-seq\
      \ data using low-rank approximation\" \navailable [here](https://www.biorxiv.org/content/early/2018/08/22/397588).\
      \ Given a \nscRNA-seq expression matrix, ALRA first computes its rank-k approximation\
      \ using randomized SVD. \nNext, each row (gene) is thresholded by the magnitude\
      \ of the most negative value of that gene. \nFinally, the matrix is rescaled.\"\
      \n"
    reference: "linderman2018zero"
    repository_url: "https://github.com/KlugerLab/ALRA"
    documentation_url: "https://github.com/KlugerLab/ALRA/blob/master/README.md"
    v1_url: "openproblems/tasks/denoising/methods/alra.py"
    v1_commit: "29803b95c88b4ec5921df2eec7111fd5d1a95daf"
    variants:
      alra: null
    preferred_normalization: "counts"
    type: "method"
  status: "enabled"
  set_wd_to_resources_dir: false
platforms:
- type: "docker"
  id: "docker"
  image: "eddelbuettel/r2u:22.04"
  target_organization: "openproblems-bio"
  target_registry: "ghcr.io"
  namespace_separator: "/"
  resolve_volume: "Automatic"
  chown: true
  setup_strategy: "ifneedbepullelsecachedbuild"
  target_image_source: "https://github.com/openproblems-bio/openproblems-v2"
  setup:
  - type: "apt"
    packages:
    - "libhdf5-dev"
    - "libgeos-dev"
    - "python3"
    - "python3-pip"
    - "python3-dev"
    - "python-is-python3"
    - "git"
    interactive: false
  - type: "python"
    user: false
    pip:
    - "anndata~=0.8.0"
    - "pyyaml"
    upgrade: true
  - type: "r"
    cran:
    - "Matrix"
    - "anndata"
    - "bit64"
    - "rsvd"
    bioc_force_install: false
  - type: "docker"
    run:
    - "git clone https://github.com/KlugerLab/ALRA.git /ALRA"
- type: "nextflow"
  id: "nextflow"
  variant: "vdsl3"
  directives:
    label:
    - "highmem"
    - "highcpu"
    tag: "$id"
  auto:
    simplifyInput: true
    simplifyOutput: true
    transcript: false
    publish: false
  debug: false
  container: "docker"
info:
  config: "/home/runner/work/openproblems-v2/openproblems-v2/src/tasks/denoising/methods/alra/config.vsh.yaml"
  platform: "docker"
  output: "/home/runner/work/openproblems-v2/openproblems-v2/target/docker/denoising/methods/alra"
  executable: "/home/runner/work/openproblems-v2/openproblems-v2/target/docker/denoising/methods/alra/alra"
  viash_version: "0.7.3"
  git_commit: "d26827dc9c64314cc14cfe96dc1610cbc06b7e8b"
  git_remote: "https://github.com/openproblems-bio/openproblems-v2"
