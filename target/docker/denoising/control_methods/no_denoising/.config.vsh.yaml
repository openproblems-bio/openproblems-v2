functionality:
  name: "no_denoising"
  namespace: "denoising/control_methods"
  version: "main_build"
  arguments:
  - type: "file"
    name: "--input_train"
    description: "The training data"
    info:
      label: "Training data"
      slots:
        layers:
        - type: "integer"
          name: "counts"
          description: "Raw counts"
        uns:
        - type: "string"
          name: "dataset_id"
          description: "A unique identifier for the dataset"
    example:
    - "resources_test/denoising/pancreas/train.h5ad"
    must_exist: true
    create_parent: true
    required: true
    direction: "input"
    multiple: false
    multiple_sep: ":"
    dest: "par"
  - type: "file"
    name: "--input_test"
    description: "The test data"
    info:
      label: "Test data"
      slots:
        layers:
        - type: "integer"
          name: "counts"
          description: "Raw counts"
        uns:
        - type: "string"
          name: "dataset_id"
          description: "A unique identifier for the dataset"
    example:
    - "resources_test/denoising/pancreas/test.h5ad"
    must_exist: true
    create_parent: true
    required: true
    direction: "input"
    multiple: false
    multiple_sep: ":"
    dest: "par"
  - type: "file"
    name: "--output"
    description: "The denoised data"
    info:
      label: "Denoised data"
      slots:
        layers:
        - type: "integer"
          name: "counts"
          description: "Raw counts"
        - type: "integer"
          name: "denoised"
          description: "denoised data"
        uns:
        - type: "string"
          name: "dataset_id"
          description: "A unique identifier for the dataset"
        - type: "string"
          name: "method_id"
          description: "A unique identifier for the method"
    example:
    - "resources_test/denoising/pancreas/magic.h5ad"
    must_exist: true
    create_parent: true
    required: true
    direction: "output"
    multiple: false
    multiple_sep: ":"
    dest: "par"
  resources:
  - type: "python_script"
    path: "script.py"
    is_executable: true
  test_resources:
  - type: "python_script"
    path: "src/common/comp_tests/check_method_config.py"
    is_executable: true
  - type: "python_script"
    path: "src/common/comp_tests/run_and_check_adata.py"
    is_executable: true
  - type: "file"
    path: "resources_test/denoising/pancreas"
    dest: "resources_test/denoising/pancreas"
  info:
    label: "No Denoising"
    summary: "negative control by copying train counts"
    description: "This method serves as a negative control, where the denoised data\
      \ is a copy of the unaltered training data. This represents the scoring threshold\
      \ if denoising was not performed on the data."
    v1:
      path: "openproblems/tasks/denoising/methods/baseline.py"
      commit: "29803b95c88b4ec5921df2eec7111fd5d1a95daf"
    variants:
      no_denoising: null
    preferred_normalization: "counts"
    type: "control_method"
    type_info:
      label: "Control method"
      summary: "Quality control methods for verifying the pipeline."
      description: "These components have the same interface as the regular methods\n\
        but also receive the solution object as input. It serves as a\nstarting point\
        \ to test the relative accuracy of new methods in\nthe task, and also as a\
        \ quality control for the metrics defined\nin the task. \n"
  status: "enabled"
  set_wd_to_resources_dir: false
platforms:
- type: "docker"
  id: "docker"
  image: "ghcr.io/openproblems-bio/base_python:1.0.1"
  target_organization: "openproblems-bio"
  target_registry: "ghcr.io"
  namespace_separator: "/"
  resolve_volume: "Automatic"
  chown: true
  setup_strategy: "ifneedbepullelsecachedbuild"
  target_image_source: "https://github.com/openproblems-bio/openproblems-v2"
  entrypoint: []
  cmd: null
- type: "nextflow"
  id: "nextflow"
  directives:
    label:
    - "midmem"
    - "midcpu"
    tag: "$id"
  auto:
    simplifyInput: true
    simplifyOutput: true
    transcript: false
    publish: false
  config:
    labels:
      mem1gb: "memory = 1.GB"
      mem2gb: "memory = 2.GB"
      mem4gb: "memory = 4.GB"
      mem8gb: "memory = 8.GB"
      mem16gb: "memory = 16.GB"
      mem32gb: "memory = 32.GB"
      mem64gb: "memory = 64.GB"
      mem128gb: "memory = 128.GB"
      mem256gb: "memory = 256.GB"
      mem512gb: "memory = 512.GB"
      mem1tb: "memory = 1.TB"
      mem2tb: "memory = 2.TB"
      mem4tb: "memory = 4.TB"
      mem8tb: "memory = 8.TB"
      mem16tb: "memory = 16.TB"
      mem32tb: "memory = 32.TB"
      mem64tb: "memory = 64.TB"
      mem128tb: "memory = 128.TB"
      mem256tb: "memory = 256.TB"
      mem512tb: "memory = 512.TB"
      cpu1: "cpus = 1"
      cpu2: "cpus = 2"
      cpu5: "cpus = 5"
      cpu10: "cpus = 10"
      cpu20: "cpus = 20"
      cpu50: "cpus = 50"
      cpu100: "cpus = 100"
      cpu200: "cpus = 200"
      cpu500: "cpus = 500"
      cpu1000: "cpus = 1000"
  debug: false
  container: "docker"
info:
  config: "/home/runner/work/openproblems-v2/openproblems-v2/src/tasks/denoising/control_methods/no_denoising/config.vsh.yaml"
  platform: "docker"
  output: "/home/runner/work/openproblems-v2/openproblems-v2/target/docker/denoising/control_methods/no_denoising"
  executable: "/home/runner/work/openproblems-v2/openproblems-v2/target/docker/denoising/control_methods/no_denoising/no_denoising"
  viash_version: "0.7.5"
  git_commit: "c5542aea744b0b1d9bd8b7cc2a0d80478ea100b9"
  git_remote: "https://github.com/openproblems-bio/openproblems-v2"
