functionality:
  name: "densmap"
  namespace: "dimensionality_reduction/methods"
  version: "main_build"
  authors: []
  inputs: []
  outputs: []
  arguments:
  - type: "file"
    name: "--input"
    alternatives: []
    description: "The training data"
    info:
      short_description: "Training data"
      slots:
        layers:
        - type: "integer"
          name: "counts"
          description: "Raw counts"
          required: true
        - type: "double"
          name: "normalized"
          description: "Normalized expression values"
          required: true
        var:
        - type: "double"
          name: "hvg_score"
          description: "High variability gene score (normalized dispersion). The greater,\
            \ the more variable."
          required: true
        uns:
        - type: "string"
          name: "dataset_id"
          description: "A unique identifier for the dataset"
          required: true
        - type: "string"
          name: "normalization_id"
          description: "Which normalization was used"
          required: true
    example:
    - "train.h5ad"
    default: []
    must_exist: true
    create_parent: true
    required: false
    direction: "input"
    multiple: false
    multiple_sep: ":"
    dest: "par"
  - type: "file"
    name: "--output"
    alternatives: []
    description: "A dimensionally reduced dataset"
    info:
      short_description: "Training data"
      slots:
        obsm:
        - type: "double"
          name: "X_emb"
          description: "The dimensionally reduced embedding."
        uns:
        - type: "string"
          name: "dataset_id"
          description: "A unique identifier for the dataset"
        - type: "string"
          name: "method_id"
          description: "A unique identifier for the method"
        - type: "string"
          name: "normalization_id"
          description: "Which normalization was used"
          required: true
    example:
    - "reduced.h5ad"
    default: []
    must_exist: true
    create_parent: true
    required: false
    direction: "output"
    multiple: false
    multiple_sep: ":"
    dest: "par"
  - type: "integer"
    name: "--n_hvg"
    alternatives: []
    description: "Number of highly variable genes to subset to. If not specified,\
      \ the input matrix will not be subset."
    example: []
    default: []
    required: false
    choices: []
    direction: "input"
    multiple: false
    multiple_sep: ":"
    dest: "par"
  - type: "integer"
    name: "--n_pca_dims"
    alternatives: []
    description: "Number of PCA dimensions to use. If not specified, no PCA will be\
      \ performed."
    example: []
    default: []
    required: false
    choices: []
    direction: "input"
    multiple: false
    multiple_sep: ":"
    dest: "par"
  argument_groups: []
  resources:
  - type: "python_script"
    path: "script.py"
    is_executable: true
  description: "Density-preserving UMAP"
  test_resources:
  - type: "file"
    path: "../../../../resources_test/dimensionality_reduction/pancreas/"
  - type: "python_script"
    text: "import anndata as ad\nimport subprocess\nfrom os import path\n\ninput_path\
      \ = meta[\"resources_dir\"] + \"/pancreas/train.h5ad\"\noutput_path = \"reduced.h5ad\"\
      \ncmd = [\n    meta['executable'],\n    \"--input\", input_path,\n    \"--output\"\
      , output_path\n]\n\nprint(\">> Checking whether input file exists\", flush=True)\n\
      assert path.exists(input_path)\n\nprint(\">> Running script as test\", flush=True)\n\
      subprocess.run(cmd, check=True)\n\nprint(\">> Checking whether output file exists\"\
      , flush=True)\nassert path.exists(output_path)\n\nprint(\">> Reading h5ad files\"\
      , flush=True)\ninput = ad.read_h5ad(input_path)\noutput = ad.read_h5ad(output_path)\n\
      \nprint(\"input:\", input, flush=True)\nprint(\"output:\", output, flush=True)\n\
      \nprint(\">> Checking whether predictions were added\", flush=True)\nassert\
      \ \"X_emb\" in output.obsm\nassert meta['functionality_name'] == output.uns[\"\
      method_id\"]\nassert 'normalization_id' in output.uns\n\nprint(\">> Checking\
      \ whether data from input was copied properly to output\", flush=True)\nassert\
      \ input.n_obs == output.n_obs\nassert input.uns[\"dataset_id\"] == output.uns[\"\
      dataset_id\"]\n\nprint(\"All checks succeeded!\", flush=True)"
    dest: "generic_test.py"
    is_executable: true
  info:
    type: "method"
    method_name: "densMAP"
    paper_reference: "narayan2021assessing"
    code_url: "https://github.com/lmcinnes/umap"
    v1_url: "openproblems/tasks/dimensionality_reduction/methods/umap.py"
    v1_commit: "14d70b330cae09527a6d4c4e552db240601e31cf"
    preferred_normalization: "log_cpm"
    variants:
      densmap_pca_logCPM:
        n_pca_dims: 50
      densmap_logCPM_1kHVG:
        n_hvg: 1000
      densmap_pca_logCPM_1kHVG:
        n_pca_dims: 50
        n_hvg: 1000
  status: "enabled"
  requirements:
    commands: []
  set_wd_to_resources_dir: false
platforms:
- type: "docker"
  id: "docker"
  image: "python:3.10"
  target_organization: "openproblems-bio"
  target_registry: "ghcr.io"
  namespace_separator: "_"
  resolve_volume: "Automatic"
  chown: true
  port: []
  setup_strategy: "ifneedbepullelsecachedbuild"
  run_args: []
  target_image_source: "https://github.com/openproblems-bio/openproblems-v2"
  setup:
  - type: "python"
    user: false
    packages:
    - "scanpy"
    - "anndata>=0.8"
    - "umap-learn"
    pip: []
    pypi: []
    git: []
    github: []
    gitlab: []
    mercurial: []
    svn: []
    bazaar: []
    url: []
    script: []
    upgrade: true
  test_setup: []
- type: "nextflow"
  id: "nextflow"
  variant: "vdsl3"
  directives:
    accelerator: {}
    conda: []
    containerOptions: []
    label:
    - "highmem"
    - "highcpu"
    module: []
    pod: []
    publishDir: []
    queue: []
    tag: "$id"
  auto:
    simplifyInput: true
    simplifyOutput: true
    transcript: false
    publish: false
  debug: false
  container: "docker"
info:
  config: "/home/runner/work/openproblems-v2/openproblems-v2/src/dimensionality_reduction/methods/densmap/config.vsh.yaml"
  platform: "nextflow"
  output: "/home/runner/work/openproblems-v2/openproblems-v2/target/nextflow/dimensionality_reduction/methods/densmap"
  executable: "/home/runner/work/openproblems-v2/openproblems-v2/target/nextflow/dimensionality_reduction/methods/densmap/densmap"
  viash_version: "0.6.7"
  git_commit: "e3a19c2d616134684a81c3fa45172c45c36759a7"
  git_remote: "https://github.com/openproblems-bio/openproblems-v2"
